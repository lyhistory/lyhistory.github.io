(window.webpackJsonp=window.webpackJsonp||[]).push([[181],{606:function(t,e,n){"use strict";n.r(e);var s=n(65),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[n("a",{attrs:{href:"/docs/software"}},[t._v("回目录")]),t._v("  《postgresql实用基础》")]),t._v(" "),n("h2",{attrs:{id:"_1-setup"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-setup"}},[t._v("#")]),t._v(" 1. Setup")]),t._v(" "),n("h3",{attrs:{id:"_1-1-install"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-install"}},[t._v("#")]),t._v(" 1.1 install")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("postgresql-client")]),t._v(" "),n("th",[t._v("libraries and client binaries")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("postgresql-server")]),t._v(" "),n("td",[t._v("core database server")])]),t._v(" "),n("tr",[n("td",[t._v("postgresql-contrib")]),t._v(" "),n("td",[t._v("additional supplied modules")])]),t._v(" "),n("tr",[n("td",[t._v("postgresql-devel")]),t._v(" "),n("td",[t._v("libraries and headers for C language development")])])])]),t._v(" "),n("p",[t._v("method1:")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("sudo yum install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm\nsudo yum install -y postgresql12-server\nsudo /usr/pgsql-12/bin/postgresql-12-setup initdb\nsudo systemctl enable postgresql-12\nsudo systemctl start postgresql-12\n")])])]),n("p",[t._v("method2:")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("download:\nhttps://www.postgresql.org/download/linux/redhat/\nhttps://yum.postgresql.org/rpmchart/\nhttps://download.postgresql.org/pub/repos/yum/12/redhat/rhel-7.6-x86_64/\n\npostgresql12-libs-12.7-1PGDG.rhel7.x86_64.rpm \npostgresql12-contrib-12.7-1PGDG.rhel7.x86_64.rpm\npostgresql12-12.7-1PGDG.rhel7.x86_64.rpm \npostgresql12-server-12.7-1PGDG.rhel7.x86_64.rpm\n\nyum install ./postgresql12-libs-12.7-1PGDG.rhel7.x86_64.rpm \nyum install ./postgresql12-12.7-1PGDG.rhel7.x86_64.rpm \nyum install ./postgresql12-contrib-12.7-1PGDG.rhel7.x86_64.rpm -y\nyum install ./postgresql12-server-12.7-1PGDG.rhel7.x86_64.rpm -y\n")])])]),n("h4",{attrs:{id:"folder"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#folder"}},[t._v("#")]),t._v(" folder")]),t._v(" "),n("p",[t._v("vim /var/lib/pgsql/12/data/postgresql.conf\nvim /var/lib/pgsql/12/data/pg_hba.conf")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("$ locate bin/postgres\n$ /usr/pgsql-12/bin/postgres -V\npostgres (PostgreSQL) 12.7\n")])])]),n("h3",{attrs:{id:"_1-2-client连接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-client连接"}},[t._v("#")]),t._v(" 1.2 client连接")]),t._v(" "),n("h4",{attrs:{id:"cli-psql"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cli-psql"}},[t._v("#")]),t._v(" CLI - psql")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("su - postgres\n进入bash，输入\n#psql\n就进入到plsql命令窗口，执行\\l就可以看到所有db\n为啥默认角色:postgres呢，执行：\n\\du\n                                   List of roles\n Role name |                         Attributes                         | Member of\n-----------+------------------------------------------------------------+-----------\n _gvm      |                                                            | {dba}\n dba       | Superuser, No inheritance, Cannot login                    | {}\n postgres  | Superuser, Create role, Create DB, Replication, Bypass RLS | {}\n\n可以创建更多角色\nsudo -u postgres createuser owning_user\nsudo -u postgres createdb -O owning_user dbname\n")])])]),n("p",[t._v("常用命令：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\\l \\list\n\\c [DATABASE]\n\\d\n\\d TABLE_NAME\n\\du\n\n\\dx\nSELECT * FROM pg_extension;\n\n--format output\n\\x on\n\n解锁 unlock\ndbname=# select pid from pg_locks l join pg_class t on l.relation = t.oid where t.relname = 'tablename';\ndbname=# SELECT pg_cancel_backend(the id);\nSELECT pg_terminate_backend(3567);\nselect * from pg_stat_activity where pid=3567;\n\n\\copy (query) to result.csv csv header\n\n")])])]),n("h4",{attrs:{id:"gui-client"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gui-client"}},[t._v("#")]),t._v(" GUI Client")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Offical: Pgadmin 4    https://www.pgadmin.org/download/")])]),t._v(" "),n("li",[n("p",[t._v("Pgadmin3 LTS by BigSQL (don’t support 11g)")])]),t._v(" "),n("li",[n("p",[t._v("DBeaver\n"),n("strong",[t._v("offline install")]),t._v("\nsettings:\nclass name: org.postgresql.Driver\ntemplate: jdbc:postgresql://{host}:{port}/{database}\nlibraries: "),n("a",{attrs:{href:"https://jdbc.postgresql.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("add postgres drivers"),n("OutboundLink")],1),t._v(" "),n("strong",[t._v("show all databases")]),t._v("\nOn the connection, right-click -> "),n("code",[t._v("Edit connection")]),t._v(" -> "),n("code",[t._v("Connection settings")]),t._v(" -> on the tabbed panel, select "),n("code",[t._v("PostgreSQL")]),t._v(", check the box "),n("code",[t._v("Show all databases")]),t._v(".")]),t._v(" "),n("p",[n("strong",[t._v("How do you view PostgreSQL messages (such as RAISE NOTICE) in DBeaver?")]),t._v("\nyou can use Ctrl+Shif+O or the button Show server output console on the left side of the script window.")])])]),t._v(" "),n("h4",{attrs:{id:"drivers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#drivers"}},[t._v("#")]),t._v(" Drivers")]),t._v(" "),n("ul",[n("li",[t._v("C# 连接 PostgreSQL --- Npgsql")])]),t._v(" "),n("h3",{attrs:{id:"_1-3-utilities"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-utilities"}},[t._v("#")]),t._v(" 1.3 Utilities")]),t._v(" "),n("ul",[n("li",[t._v("pg_dump")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("pg_dump -s dbName > db_schema_dump.sql\n\n\n# dump users\npg_dumpall --globals-only  --file=globals.sql\n\n")])])]),n("h3",{attrs:{id:"_1-4-config"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-config"}},[t._v("#")]),t._v(" 1.4 Config")]),t._v(" "),n("h4",{attrs:{id:"理解一下posgresql的用户概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#理解一下posgresql的用户概念"}},[t._v("#")]),t._v(" 理解一下posgresql的用户概念")]),t._v(" "),n("p",[t._v("the "),n("code",[t._v("postgres")]),t._v(" PostgreSQL user account already exists and is configured to be accessible via "),n("code",[t._v("peer")]),t._v(" authentication for unix sockets in "),n("code",[t._v("pg_hba.conf")])]),t._v(" "),n("p",[t._v("https://www.liquidweb.com/kb/what-is-the-default-password-for-postgresql/")]),t._v(" "),n("p",[t._v("本机如果直接通过plsql连接，可以修改local用户(默认用户postgres)：")]),t._v(" "),n("p",[t._v("https://www.hostinger.com/tutorials/how-to-install-postgresql-on-centos-7/")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("psql -d template1 -c \"ALTER USER postgres WITH PASSWORD 'NewPassword';\"\n")])])]),n("p",[t._v("https://stackoverflow.com/questions/18664074/getting-error-peer-authentication-failed-for-user-postgres-when-trying-to-ge")]),t._v(" "),n("h4",{attrs:{id:"开启远程连接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#开启远程连接"}},[t._v("#")]),t._v(" 开启远程连接：")]),t._v(" "),n("p",[t._v("https://blog.csdn.net/zhangzeyuaaa/article/details/77941039")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("step 1：开启监听：\n\nvim /var/lib/pgsql/12/data/postgresql.conf\n\nlisten_addresses = '*'          # what IP address(es) to listen on;\n\nstep 2：修改访问规则, md5方式：\n\nvim /var/lib/pgsql/12/data/pg_hba.conf \n\nhost    all             all             0.0.0.0/0            md5\n\nstep 3：md5方式需要设置密码然后再重启：\nsu - postgres\n$ psql -U postgres -p 5432\npostgres=# \\password postgres\n\nsystemctl restart  postgresql-12\n\n\nhttps://stackoverflow.com/questions/6405127/how-do-i-specify-a-password-to-psql-non-interactively\nPGPASSWORD=postgres psql --host IP --port 5432 -U postgres -d DBNAME -c \"query;\"\nPGPASSWORD=postgres psql --host IP --port 5432 -U postgres -d DBNAME -f file.sql\n")])])]),n("h2",{attrs:{id:"_2-syntax"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-syntax"}},[t._v("#")]),t._v(" 2. Syntax")]),t._v(" "),n("p",[t._v("Assign null or empty ‘’ to numberic,  to_number(‘’) throw exception, use if else instead\nBigint default value is NULL not 0")]),t._v(" "),n("h3",{attrs:{id:"_2-1-basic"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-basic"}},[t._v("#")]),t._v(" 2.1 Basic")]),t._v(" "),n("p",[t._v("https://www.tutorialspoint.com/postgresql/index.htm")]),t._v(" "),n("p",[t._v("https://www.postgresql.org/docs/10/app-psql.html")]),t._v(" "),n("p",[t._v("表空间")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("postgres=# select * from pg_tablespace;\n oid  |  spcname   | spcowner | spcacl | spcoptions\n------+------------+----------+--------+------------\n 1663 | pg_default |       10 |        |\n 1664 | pg_global  |       10 |        |\n(2 rows)\n")])])]),n("h4",{attrs:{id:"system"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#system"}},[t._v("#")]),t._v(" System")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Oracle rownum / now(), sysdate\t\npostgresql: limit / now(), CURRENT_DATE\n\nNULL and empty string:\n\nAssign null or empty ‘’ to numberic,  to_number(‘’) throw exception, use if else instead\nBigint default value is NULL not 0\nOracle NVL()\nPGSQL coalesce()\n\nReturning into:\n\nhttps://stackoverflow.com/questions/7191902/cannot-select-from-update-returning-clause-in-postgres\nOracle: SQL%ROWCOUNT\nPG: GET DIAGNOSTICS integer_var = ROW_COUNT;\n")])])]),n("h4",{attrs:{id:"data-format"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#data-format"}},[t._v("#")]),t._v(" Data Format")]),t._v(" "),n("p",[n("strong",[t._v("varchar to numeric")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("'12.01'::numeric\n")])])]),n("p",[n("strong",[t._v("Date")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("规范数据：\nSELECT to_char('20230308 1:1:1.1'::timestamp, 'yyyymmdd HH24:MI:SS:MS'); =》 20230308 01:01:01:100\n但是注意：  SELECT to_timestamp('20230308 1:1:1.1', 'yyyymmdd HH24:MI:SS:MS'); =》2023-03-08 01:01:01.100 带- 并不是我们想要的格式\n\nselect timestamp'20211227';\nselect to_timestamp('2021-12-24 05:00:00','yyyy-mm-dd hh24:mi:ss');\nselect cast(current_date-interval '4 day'+interval '5 hour' as text)::timestamp\n'2013-08-20 14:52:49'::timestamp\n\nto_timestamp('20/8/2013 14:52:49', 'DD/MM/YYYY hh24:mi:ss')\nto_timestamp('20/8/2013 14:52:49', 'DD/MM/YYYY hh24:mi:ss')::timestamp\nto_timestamp('20/8/2013 14:52:49', 'DD/MM/YYYY hh24:mi:ss') AT TIME ZONE 'UTC'\n\nselect to_timestamp(epoch_column)::date;\n\nselect to_char(current_date-1,'yyyymmdd');\nselect TO_CHAR(current_date+interval '5 hour','yyyy-mm-dd hh24:mi:ss')\nselect TO_CHAR(current_date+interval '5 hour'+'4 minute','yyyy-mm-dd hh24:mi:ss')\nselect to_char(current_date - interval '1' month, 'YYYYMM');\n\nselect extract(epoch FROM cast(current_date-interval '5 day'+interval '19 hour'+interval '1 minute' as text)::timestamp AT TIME ZONE 'SGT')::int\n\nCURRENT_TIMESTAMP in milliseconds:\nSELECT (extract(epoch from now())*1000)::bigint;\n\nSELECT * FROM your-table\nWHERE EXTRACT(MINUTE FROM begin_time) = '45'\n")])])]),n("p",[t._v("ORACLE VS POSTGRES")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Oracle to_char(param)\npostgresql \tto_char(parma1, ‘999’)\n\n**Concat**\nCharacter string connector (||) will fail in postgresql when there is ‘’ or null\nconcat()\nFormat\tv_sql := format($$select * from table where col1=%s$$,’test’)\n\n**Datetime**\nOracle to_date(str, ‘yyyy-mm-dd hh24:mi:ss’)\nPostgresql to_timestamp(str, ‘yyyy-mm-dd hh24:mi:ss’)\nselect extract (day from timestamp '2011-01-01 01:01:01' - timestamp '2001-01-01 01:01:01');\n\n \n")])])]),n("p",[t._v("https://www.postgresql.org/docs/9.1/functions-formatting.html")]),t._v(" "),n("p",[t._v("https://www.postgresql.org/docs/9.1/static/functions-datetime.html")]),t._v(" "),n("p",[t._v("https://thebuild.com/blog/2018/08/07/does-anyone-really-know-what-time-it-is/")]),t._v(" "),n("p",[t._v("https://www.postgresql.org/docs/9.2/functions-datetime.html")]),t._v(" "),n("h4",{attrs:{id:"tables-and-views"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tables-and-views"}},[t._v("#")]),t._v(" Tables and Views")]),t._v(" "),n("p",[t._v("The new query must generate the same columns that were generated by the existing view query (that is, the same column names in the same order and with the same data types) (...)")]),t._v(" "),n("h3",{attrs:{id:"_2-2-crud"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-crud"}},[t._v("#")]),t._v(" 2.2 CRUD")]),t._v(" "),n("h4",{attrs:{id:"update-from-select-subquery"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#update-from-select-subquery"}},[t._v("#")]),t._v(" update from select subquery")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("dummy")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" customer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("subquery"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("customer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    address"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("subquery"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("address"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    partn"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("subquery"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("partn\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" address_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" customer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" partn\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* big hairy SQL */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" subquery\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("dummy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("address_id"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("subquery"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("address_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WITH")]),t._v(" subquery "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" address_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" customer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" partn\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* big hairy SQL */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("dummy")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" customer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" subquery"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("customer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    address  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" subquery"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("address"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    partn    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" subquery"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("partn\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" subquery\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("dummy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("address_id "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" subquery"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("address_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h4",{attrs:{id:"insert-or-update-if-exists"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#insert-or-update-if-exists"}},[t._v("#")]),t._v(" insert or update if exists:")]),t._v(" "),n("p",[t._v("最简单的思路：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("if exists (select * from table where ...) then\n\tupdate\nelse\n\tinsert\nend if;\n")])])]),n("p",[t._v("如果是基于primary key或index可以用 insert on conflict或者upsert：")]),t._v(" "),n("p",[t._v("https://stackoverflow.com/questions/1109061/insert-on-duplicate-update-in-postgresql/1109198#1109198")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Oracle merge into\nPgsql insert into\nhttps://www.postgresql.org/docs/9.5/static/sql-insert.html\ninsert into table1 as t1(col1,col2, col3)\nselect col1, col2,col3\nfrom ( select col1,col2, max(col3) as col3\n from table2\n where col3 >= date'2012-01-01'\n and col3 <date'2013-01-01'\n and col1 is not null\n and col2 is not null\n group by col1, col2 ) a\non conflict(col1, col2) do\nupdate set col3 = excluded.col3,\n   \t col2 = case when excluded.col2 is null then t1.col2 else excluded.col2 end\n\n")])])]),n("p",[t._v("For update")]),t._v(" "),n("h4",{attrs:{id:"with-statement"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#with-statement"}},[t._v("#")]),t._v(" WITH Statement")]),t._v(" "),n("p",[n("code",[t._v("WITH")]),t._v(" provides a way to write auxiliary statements for use in a larger query.")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("WITH moved_rows AS (\n\t\tDELETE FROM t_bticoin_index\n\t\tWHERE index_time/1000<=\n\t\textract(epoch FROM cast(current_date-interval '7 day' as text)::timestamp AT TIME ZONE 'SGT')::int\n\t\tRETURNING index_name,index_value,index_time,server_time\n\t)\n\tINSERT INTO t_bticoin_index_hist\n\tSELECT * FROM moved_rows;\n")])])]),n("h3",{attrs:{id:"_2-3-functions-stored-procedure"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-functions-stored-procedure"}},[t._v("#")]),t._v(" 2.3 Functions & Stored Procedure")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("if condition_1 then\n  statement_1;\nelsif condition_2 then\n  statement_2\n...\nelsif condition_n then\n  statement_n;\nelse\n  else-statement;\nend if;\n")])])]),n("p",[t._v("Use the right type, character to numeric\nv_product := to_number(p_walletcode);")]),t._v(" "),n("p",[t._v("Dont use FROM DUAL in procedrue")]),t._v(" "),n("p",[t._v("Json")]),t._v(" "),n("p",[t._v("Json array\nhttps://stackoverflow.com/questions/24006291/postgresql-return-result-set-as-json-array/24006432")]),t._v(" "),n("p",[t._v("PostgreSQL Error Codes:\narray_length(array[1,2,3], 1) https://www.postgresql.org/docs/9.1/static/functions-array.html")]),t._v(" "),n("p",[n("strong",[t._v("Transaction")])]),t._v(" "),n("p",[t._v("Cursor:\nhttps://www.postgresql.org/docs/11/static/sql-call.html")]),t._v(" "),n("p",[t._v("cannot commit while a subtransaction is active to_json")]),t._v(" "),n("p",[t._v("https://hashrocket.com/blog/posts/faster-json-generation-with-postgresql\nselect row_to_json(t) from ( select id, text from words ) t")]),t._v(" "),n("p",[n("strong",[t._v("Functions")])]),t._v(" "),n("p",[t._v("Perform function\nhttps://stackoverflow.com/questions/18315633/calling-functions-with-exec-instead-of-select")]),t._v(" "),n("p",[n("strong",[t._v("Dynamic sql")]),t._v("\nhttps://stackoverflow.com/questions/12780275/dynamic-sql-query-in-postgres\nexecute immediate v_sql into v_count;")]),t._v(" "),n("p",[n("strong",[t._v("Cursor and fetch")]),t._v("\nhttps://www.postgresql.org/docs/9.3/static/sql-fetch.html\nhttps://www.postgresql.org/docs/9.3/static/plpgsql-cursors.html\n"),n("img",{attrs:{src:"/docs/docs_image/software/postgresql/postgresql02.png",alt:""}})]),t._v(" "),n("p",[n("strong",[t._v("Exception handling")]),t._v("\nhttps://www.postgresql.org/docs/8.2/static/plpgsql-statements.html\nNo data found\nSelect into strict")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("SELECT * INTO myrec FROM emp WHERE empname = myname;\nIF NOT FOUND THEN\n\tRAISE EXCEPTION 'employee % not found', myname;\nEND IF;\n")])])]),n("p",[t._v("If the STRICT option is specified, the query must return exactly one row or a run-time error will be reported, either NO_DATA_FOUND (no rows) or TOO_MANY_ROWS (more than one row). You can use an exception block if you wish to catch the error, for example:")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("BEGIN\n    SELECT * INTO STRICT myrec FROM emp WHERE empname = myname;\n    EXCEPTION\n        WHEN NO_DATA_FOUND THEN\n            RAISE EXCEPTION 'employee % not found', myname;\n        WHEN TOO_MANY_ROWS THEN\n            RAISE EXCEPTION 'employee % not unique', myname;\nEND;\n")])])]),n("h4",{attrs:{id:"generate-time-series"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#generate-time-series"}},[t._v("#")]),t._v(" generate time series")]),t._v(" "),n("p",[t._v("https://www.postgresql.org/docs/9.1/functions-srf.html")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("select 'btc',null,extract(epoch FROM index_time::timestamp AT TIME ZONE 'SGT')::int,(extract(epoch from now())*1000)::bigint\n\t\t\tfrom generate_series(cast(current_date-interval '1 day'+interval '19 hour'+interval '1 minute' as text)::timestamp AT TIME ZONE 'SGT', \n\t\t\t\tcast(current_date+interval '5 hour' as text)::timestamp AT TIME ZONE 'SGT', \n\t\t\t\tinterval '1 minutes') as s(index_time)\n\t\t\twhere index_time not in (select to_timestamp(index_time/1000) from t_bticoin_index_test)\n\t\t\t\n查找缺失数据\t\t\t\nSELECT *\nFROM generate_series('2022-01-14 12:00:00','2022-01-25 11:19:00', \n\t\t\t\tinterval '1 minutes') as s(index_time)\t\t\nwhere index_time not in (select to_timestamp(index_time/1000) from t_bticoin_index  where index_time/1000>=\n\textract(epoch FROM cast('2022-01-14 12:00:00' as text)::timestamp AT TIME ZONE 'SGT')::int);\n")])])]),n("h4",{attrs:{id:"detect-fill-gaps"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#detect-fill-gaps"}},[t._v("#")]),t._v(" detect & fill gaps")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[t._v("https:"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//www.jianshu.com/p/890137e60597")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" temp_table\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" index_value"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("t2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index_value\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n                    index_time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index_value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    lead"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index_time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index_time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("over")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" index_time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" index_time1\n                    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" index_time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index_value\n                        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" temp_table\n                        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" index_value "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" o\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n                    index_time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index_value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("to_timestamp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index_time"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" temp_table"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index_time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index_value\n                        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" temp_table"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("x\n                        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" temp_table"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index_value "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("temp_table"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index_time "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("between")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index_time "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index_time1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n                        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("all")]),t._v("\n\n                        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" index_time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index_value\n                        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" temp_table\n                        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" index_value "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" t1\n                    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v("  index_time\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" t2\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" temp_table"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index_time"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("t2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index_time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"_2-4-trigger"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-trigger"}},[t._v("#")]),t._v(" 2.4 Trigger")]),t._v(" "),n("p",[t._v("A trigger function is created with the CREATE FUNCTION command, declaring it as a function with no arguments and a return type of trigger (for data change triggers) or event_trigger (for database event triggers). Special local variables named TG_something are automatically defined")]),t._v(" "),n("p",[t._v("A trigger function must return either NULL or a record/row value having exactly the structure of the table the trigger was fired for.")]),t._v(" "),n("p",[t._v("Example 1:\nRow-level triggers fired BEFORE can return null to signal the trigger manager to skip the rest of the operation for this row (i.e., subsequent triggers are not fired, and the INSERT/UPDATE/DELETE does not occur for this row)")]),t._v(" "),n("p",[t._v("This example trigger ensures that any insert, update or delete of a row in the emp table is recorded (i.e., audited) in the emp_audit table. The current time and user name are stamped into the row, together with the type of operation performed on it.")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("CREATE TABLE emp (\n    empname           text NOT NULL,\n    salary            integer\n);\n\nCREATE TABLE emp_audit(\n    operation         char(1)   NOT NULL,\n    stamp             timestamp NOT NULL,\n    userid            text      NOT NULL,\n    empname           text      NOT NULL,\n    salary integer\n);\n\nCREATE OR REPLACE FUNCTION process_emp_audit() RETURNS TRIGGER AS $emp_audit$\n    BEGIN\n        --\n        -- Create a row in emp_audit to reflect the operation performed on emp,\n        -- making use of the special variable TG_OP to work out the operation.\n        --\n        IF (TG_OP = 'DELETE') THEN\n            INSERT INTO emp_audit SELECT 'D', now(), user, OLD.*;\n        ELSIF (TG_OP = 'UPDATE') THEN\n            INSERT INTO emp_audit SELECT 'U', now(), user, NEW.*;\n        ELSIF (TG_OP = 'INSERT') THEN\n            INSERT INTO emp_audit SELECT 'I', now(), user, NEW.*;\n        END IF;\n        RETURN NULL; -- result is ignored since this is an AFTER trigger\n    END;\n$emp_audit$ LANGUAGE plpgsql;\n\nCREATE TRIGGER emp_audit\nAFTER INSERT OR UPDATE OR DELETE ON emp\n    FOR EACH ROW EXECUTE FUNCTION process_emp_audit();\n")])])]),n("p",[t._v("Example 2:")]),t._v(" "),n("p",[t._v("If a nonnull value is returned then the operation proceeds with that row value. Returning a row value different from the original value of NEW alters the row that will be inserted or updated. Thus, if the trigger function wants the triggering action to succeed normally without altering the row value, NEW (or a value equal thereto) has to be returned. To alter the row to be stored, it is possible to replace single values directly in NEW and return the modified NEW, or to build a complete new record/row to return. In the case of a before-trigger on DELETE, the returned value has no direct effect, but it has to be nonnull to allow the trigger action to proceed. Note that NEW is null in DELETE triggers, so returning that is usually not sensible. The usual idiom in DELETE triggers is to return OLD.")]),t._v(" "),n("p",[t._v("This example trigger ensures that any time a row is inserted or updated in the table, the current user name and time are stamped into the row. And it checks that an employee's name is given and that the salary is a positive value.")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("CREATE TABLE emp (\n    empname text,\n    salary integer,\n    last_date timestamp,\n    last_user text\n);\n\nCREATE FUNCTION emp_stamp() RETURNS trigger AS $emp_stamp$\n    BEGIN\n        -- Check that empname and salary are given\n        IF NEW.empname IS NULL THEN\n            RAISE EXCEPTION 'empname cannot be null';\n        END IF;\n        IF NEW.salary IS NULL THEN\n            RAISE EXCEPTION '% cannot have null salary', NEW.empname;\n        END IF;\n\n        -- Who works for us when they must pay for it?\n        IF NEW.salary < 0 THEN\n            RAISE EXCEPTION '% cannot have a negative salary', NEW.empname;\n        END IF;\n\n        -- Remember who changed the payroll when\n        NEW.last_date := current_timestamp;\n        NEW.last_user := current_user;\n        RETURN NEW;\n    END;\n$emp_stamp$ LANGUAGE plpgsql;\n\nCREATE TRIGGER emp_stamp BEFORE INSERT OR UPDATE ON emp\n    FOR EACH ROW EXECUTE FUNCTION emp_stamp();\n")])])]),n("h3",{attrs:{id:"_2-5-子表继承"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-子表继承"}},[t._v("#")]),t._v(" 2.5 子表继承")]),t._v(" "),n("p",[t._v('SELECT，UPDATE和DELETE--支持这个"ONLY"符号')]),t._v(" "),n("p",[t._v("Similarly an inheritance link can be removed from a child using the NO INHERIT variant of ALTER TABLE. Dynamically adding and removing inheritance links like this can be useful when the inheritance relationship is being used for table partitioning (see Section 5.9)[https://www.postgresql.org/docs/12/ddl-partitioning.html].")]),t._v(" "),n("h3",{attrs:{id:"_2-6-partition-分区"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-partition-分区"}},[t._v("#")]),t._v(" 2.6 Partition 分区")]),t._v(" "),n("p",[t._v("Inheritance Partitioning VS postgresl12 原生 built-in Declarative  Partitioning\nhttps://www.postgresql.org/docs/12/ddl-partitioning.html#DDL-PARTITIONING-USING-INHERITANCE\nhttps://www.postgresql.org/docs/12/ddl-partitioning.html#DDL-PARTITIONING-DECLARATIVE")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("PARTITIONING-DECLARATIVE:\nALTER TABLE measurement DETACH PARTITION measurement_y2006m02;\n\nPARTITIONING-USING-INHERITANCE:\nALTER TABLE measurement_y2006m02 NO INHERIT measurement;\n")])])]),n("p",[t._v("注意，如果创建分区比如 measurement_y2006m02 之前插入的数据是在 父表 measurement里面，查询可以使用 ONLY 关键字")]),t._v(" "),n("p",[t._v("https://www.postgresql.org/docs/current/plpgsql-trigger.html")]),t._v(" "),n("p",[t._v("https://www.postgresql.org/docs/10/ddl-partitioning.html")]),t._v(" "),n("h4",{attrs:{id:"自动分区-继承分区"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自动分区-继承分区"}},[t._v("#")]),t._v(" 自动分区-继承分区")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("CREATE OR REPLACE FUNCTION public.pg_auto_insert_TABLE()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\ndeclare\n\tpartition_column_name\ttext ;\n\tstrSQL\ttext;\n\tcurMM\tvarchar(6);\n\tisExist\tboolean;\n\tstartTime\ttext;\n\tendTime\ttext;\nbegin\n\tpartition_column_name := TG_ARGV[0];\n\n\tEXECUTE 'SELECT $1.'||partition_column_name INTO strSQL USING NEW;\n\traise info 'strSQL:%',strSQL;\n\tcurMM := to_char(to_timestamp(strSQL::BIGINT/1000), 'YYYYMM'); \n\traise info 'curMM:%',curMM;\n\n\tselect count(*) INTO isExist from pg_class where relname = (TG_RELNAME||'_'||curMM);\n\n    IF ( isExist = false ) THEN  \n        startTime := curMM||'01 00:00:00.000';\n        endTime := to_char(startTime::timestamp + interval '1 month', 'YYYY-MM-DD HH24:MI:SS.MS');\n        strSQL := 'CREATE TABLE IF NOT EXISTS '||TG_RELNAME||'_'||curMM||\n                  ' ( CHECK('||partition_column_name||'>='''|| (extract(epoch FROM startTime::timestamp AT TIME ZONE 'SGT')*1000)::bigint ||''' AND '\n                             ||partition_column_name||'< '''|| (extract(epoch FROM endTime::timestamp AT TIME ZONE 'SGT')*1000)::bigint ||''' )\n                          ) INHERITS ('||TG_RELNAME||') ;';  \n        EXECUTE strSQL;\n\n\t\tstrSQL := 'CREATE INDEX idx_time_'||curMM||' ON '\n\t\t\t\t\t\t  ||TG_RELNAME||'_'||curMM||' ('||partition_column_name||');';\n\t\tEXECUTE strSQL;\n\t\n    END IF;\n\n \tstrSQL := 'INSERT INTO '||TG_RELNAME||'_'||curMM||' SELECT $1.*';\n    EXECUTE strSQL USING NEW;\n\tRETURN NULL;\nEND;\n$function$\n;\n\nCREATE TRIGGER insert_TABLE\nBEFORE INSERT\nON t_TABLE\nFOR EACH ROW\nEXECUTE PROCEDURE pg_auto_insert_TABLE('index_time');\n\nCREATE OR REPLACE FUNCTION public.pg_houseclean()\n RETURNS integer\n LANGUAGE plpgsql\nAS $function$\ndeclare\nresult integer;\nprevious_month varchar;\nstrSql varchar;\nbegin\n\tselect to_char(current_date - interval '1' month, 'YYYYMM') into previous_month;\n\tstrSql :='ALTER TABLE t_TABLE_'||previous_month||' NO INHERIT t_TABLE;';\n\traise info 'strSQL:%',strSql;\n\tEXECUTE strSql;\n\tselect 100 into result;\n\tRETURN result;\nEND;\n$function$\n;\n\n")])])]),n("h3",{attrs:{id:"_2-7-advanced"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-advanced"}},[t._v("#")]),t._v(" 2.7 Advanced")]),t._v(" "),n("h4",{attrs:{id:"index"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#index"}},[t._v("#")]),t._v(" index")]),t._v(" "),n("p",[t._v("注意，跟mysql不同，postgresql的索引是schema级别的，不是table级别的，所以虽然是\ncreate index IDX_NAME on TABLE(COLUMN) IDX_NAME也不能重复！\nIndexes and tables (and views, and sequences, and...) are stored in the pg_class catalog, and they're unique per schema due to a unique key on it")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("select * from pg_class c join pg_namespace ns on c.relnamespace = ns.oid where c.relname='idx_time_202204';\n")])])]),n("p",[t._v("https://stackoverflow.com/questions/27306539/at-what-level-do-postgres-index-names-need-to-be-unique")]),t._v(" "),n("h4",{attrs:{id:"temp-table"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#temp-table"}},[t._v("#")]),t._v(" Temp table")]),t._v(" "),n("p",[t._v("https://github.com/yallie/pg_global_temp_tables\n"),n("img",{attrs:{src:"/docs/docs_image/software/postgresql/postgresql03.png",alt:""}})]),t._v(" "),n("p",[t._v("https://stackoverflow.com/questions/41178844/are-temporary-tables-in-postgresql-visible-over-all-client-sessions")]),t._v(" "),n("h4",{attrs:{id:"sequence"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sequence"}},[t._v("#")]),t._v(" Sequence")]),t._v(" "),n("p",[t._v("https://www.postgresql.org/docs/8.2/static/functions-sequence.html")]),t._v(" "),n("h4",{attrs:{id:"customized-types"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#customized-types"}},[t._v("#")]),t._v(" Customized Types")]),t._v(" "),n("p",[t._v("https://www.postgresql.org/docs/9.6/static/sql-createtype.html")]),t._v(" "),n("p",[t._v("CREATE TYPE “XYZ” AS TABLE OF VARCHAR2(104) in postgresql https://stackoverflow.com/questions/24017175/create-type-xyz-as-table-of-varchar2104-in-postgresql")]),t._v(" "),n("p",[t._v("Array[] as input\nhttps://www.postgresql.org/docs/9.1/static/arrays.html\nhttps://stackoverflow.com/questions/570393/postgres-integer-arrays-as-parameters")]),t._v(" "),n("p",[t._v("https://stackoverflow.com/questions/3660787/how-to-list-custom-types-using-postgres-information-schema")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Oracle bulk collect into\nPgsql Offset \n/*CREATE TYPE t_my AS (\n    col1    numeric(16,6),\n    col2    numeric,\n    col3 bpchar(36)\n    );*/\n    \ndo $$DECLARE   \nc cursor(os int) for select * from table limit 5 offset os;\nr record;\nv_name varchar(100)[];\nrecs t_my[];\nBEGIN\n\n    select array (select row(0, col, 'aaa') from table1 limit 5 offset 10 ) into recs;\n    --v_games:= array_to_string(v_name,',');\n    raise notice '%', recs[1].col1;\nEND\n$$;\n")])])]),n("h4",{attrs:{id:"analysis"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#analysis"}},[t._v("#")]),t._v(" Analysis")]),t._v(" "),n("p",[t._v("Window function\nhttps://www.postgresql.org/docs/11/static/tutorial-window.html\nhttps://gist.github.com/dialogbox/454380d6a68344556350bb8dbf1d64e5")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("select  col1, col2, min(col3)  points\n from (select t1.col1, t1.col2,\n        \tfirst_value(col3) over w as col3  \n        \tfrom table1  t1\n        \twhere t1.date >= to_date('2018-01-01','yyyy-mm-dd')\n        \tand t1.date<to_date('2018-07-01','yyyy-mm-dd')\n        \twindow w AS(\n   \t\t\t partition by col1,col2\n   \t\t\t order by date desc\n   \t\t )      \t \n) t group by col1, col2\norder by 1,2;\n")])])]),n("h4",{attrs:{id:"dynamic-cursor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-cursor"}},[t._v("#")]),t._v(" Dynamic cursor")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("In sp pg_test:\n\tINOUT results refcursor)\n\tresults := 'cur';\n_query_:=’select * from table’;\nperform pg_dyncursor('cur', _query_);\nThen in plsql:\n\tBegin\n\t\tCall pg_test();\n\tEnd;\nFETCH ALL IN cur;\nclose cur;\n\nCREATE OR REPLACE FUNCTION pg_dyncursor(cursor_name text, query text)\n\tRETURNS void\n\tLANGUAGE plpgsql\nAS $function$\nDECLARE\nBEGIN \n\tEXECUTE 'DECLARE' || quote_ident(cursor_name) || ' CURSOR WITH HOLD FOR ' || query;\nEND \n$function$\n")])])]),n("h4",{attrs:{id:"scheduler"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#scheduler"}},[t._v("#")]),t._v(" Scheduler")]),t._v(" "),n("p",[t._v("https://github.com/citusdata/pg_cron\nhttps://crontab.guru/")]),t._v(" "),n("p",[t._v("SELECT cron.schedule('0 2 * * *', $$TODO$$);\n"),n("img",{attrs:{src:"/docs/docs_image/software/postgresql/postgresql04.png",alt:""}}),t._v("\nhttps://www.pgadmin.org/docs/pgadmin3/1.22/pgagent.html")]),t._v(" "),n("h4",{attrs:{id:"message-flow-protocol-flow"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#message-flow-protocol-flow"}},[t._v("#")]),t._v(" Message Flow / Protocol Flow")]),t._v(" "),n("p",[t._v("https://www.postgresql.org/docs/11/static/protocol-flow.html\nSimple query:\nRecommended practice is to code frontends in a state-machine style that will accept any message type at any time that it could make sense, rather than wiring in assumptions about the exact sequence of messages\nExtended query:")]),t._v(" "),n("h4",{attrs:{id:"lock"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lock"}},[t._v("#")]),t._v(" Lock")]),t._v(" "),n("p",[t._v("https://www.postgresql.org/docs/current/explicit-locking.html")]),t._v(" "),n("ul",[n("li",[t._v("Table-Level Locks")]),t._v(" "),n("li",[t._v("Row-Level Locks")]),t._v(" "),n("li",[t._v("Page-Level Locks")]),t._v(" "),n("li",[t._v("Deadlocks")]),t._v(" "),n("li",[t._v("Advisory Locks")])]),t._v(" "),n("h2",{attrs:{id:"_3-high-availability"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-high-availability"}},[t._v("#")]),t._v(" 3. High Availability")]),t._v(" "),n("blockquote",[n("p",[t._v("Database servers can work together to allow a second server to take over quickly if the primary server fails (high availability), or to allow several computers to serve the same data (load balancing). Ideally, database servers could work together seamlessly. Web servers serving static web pages can be combined quite easily by merely load-balancing web requests to multiple machines. In fact, read-only database servers can be combined relatively easily too. Unfortunately, most database servers have a read/write mix of requests, and read/write servers are much harder to combine. This is because though read-only data needs to be placed on each server only once, a write to any server has to be propagated to all servers so that future read requests to those servers return consistent results.")]),t._v(" "),n("p",[t._v("This synchronization problem is the fundamental difficulty for servers working together. Because there is no single solution that eliminates the impact of the sync problem for all use cases, there are multiple solutions. Each solution addresses this problem in a different way, and minimizes its impact for a specific workload.")]),t._v(" "),n("p",[t._v("https://www.postgresql.org/docs/current/high-availability.html")])]),t._v(" "),n("h3",{attrs:{id:"_3-1-replication不同方案"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-replication不同方案"}},[t._v("#")]),t._v(" 3.1 Replication不同方案：")]),t._v(" "),n("p",[t._v("https://www.postgresql.org/docs/current/different-replication-solutions.html")]),t._v(" "),n("ul",[n("li",[t._v("Shared Disk Failover：")])]),t._v(" "),n("p",[t._v("​\tShared hardware functionality is common in network storage devices.")]),t._v(" "),n("ul",[n("li",[t._v("File System (Block Device) Replication")])]),t._v(" "),n("p",[t._v("A modified version of shared hardware functionality")]),t._v(" "),n("p",[t._v("DRBD is a popular file system replication solution for Linux.")]),t._v(" "),n("ul",[n("li",[t._v("Write-Ahead Log Shipping")])]),t._v(" "),n("p",[t._v("A standby server can be implemented using file-based log shipping ("),n("a",{attrs:{href:"https://www.postgresql.org/docs/current/warm-standby.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Section 26.2"),n("OutboundLink")],1),t._v(") or streaming replication (see "),n("a",{attrs:{href:"https://www.postgresql.org/docs/current/warm-standby.html#STREAMING-REPLICATION",target:"_blank",rel:"noopener noreferrer"}},[t._v("Section 26.2.5"),n("OutboundLink")],1),t._v("), or a combination of both. For information on hot standby, see "),n("a",{attrs:{href:"https://www.postgresql.org/docs/current/hot-standby.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Section 26.5"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("ul",[n("li",[t._v("Logical Replication")])]),t._v(" "),n("p",[t._v("Allows a database server to send a stream of data modifications to another server.  "),n("a",{attrs:{href:"https://www.postgresql.org/docs/current/logical-replication.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chapter 30"),n("OutboundLink")],1),t._v(".("),n("a",{attrs:{href:"https://www.postgresql.org/docs/current/logicaldecoding.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chapter 48"),n("OutboundLink")],1)]),t._v(" "),n("ul",[n("li",[t._v("Trigger-Based Master-Standby Replication")])]),t._v(" "),n("p",[t._v("The standby can answer read-only queries while the master server is running. The standby server is ideal for data warehouse queries.Slony-I is an example of this type of replication, with per-table granularity, and support for multiple standby servers. Because it updates the standby server asynchronously (in batches), there is possible data loss during fail over.")]),t._v(" "),n("ul",[n("li",[t._v("Statement-Based Replication Middleware")])]),t._v(" "),n("p",[t._v("ach server operates independently. Read-write queries must be sent to all servers, so that every server receives any changes. But read-only queries can be sent to just one server, allowing the read workload to be distributed among them.Care must also be taken that all transactions either commit or abort on all servers, perhaps using two-phase commit ("),n("a",{attrs:{href:"https://www.postgresql.org/docs/current/sql-prepare-transaction.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("PREPARE TRANSACTION"),n("OutboundLink")],1),t._v(" and "),n("a",{attrs:{href:"https://www.postgresql.org/docs/current/sql-commit-prepared.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("COMMIT PREPARED"),n("OutboundLink")],1),t._v("). Pgpool-II and Continuent Tungsten are examples of this type of replication.")]),t._v(" "),n("ul",[n("li",[t._v("Asynchronous Multimaster Replication")])]),t._v(" "),n("p",[t._v("each server works independently, and periodically communicates with the other servers to identify conflicting transactions. The conflicts can be resolved by users or conflict resolution rules. Bucardo is an example of this type of replication.")]),t._v(" "),n("ul",[n("li",[t._v("Synchronous Multimaster Replication")])]),t._v(" "),n("p",[t._v("PostgreSQL does not offer this type of replication")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Commercial Solutions")])]),t._v(" "),n("li",[n("p",[t._v("Data Partitioning")])])]),t._v(" "),n("p",[t._v("Data partitioning splits tables into data sets. Each set can be modified by only one server. For example, data can be partitioned by offices, e.g., London and Paris,")]),t._v(" "),n("ul",[n("li",[t._v("Multiple-Server Parallel Query Execution")])]),t._v(" "),n("p",[t._v("Many of the above solutions allow multiple servers to handle multiple queries, but none allow a single query to use multiple servers to complete faster. This solution allows multiple servers to work concurrently on a single query. It is usually accomplished by splitting the data among servers and having each server execute its part of the query and return results to a central server where they are combined and returned to the user.")]),t._v(" "),n("h3",{attrs:{id:"_3-2具体方案1-warm-standby-or-log-shipping"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2具体方案1-warm-standby-or-log-shipping"}},[t._v("#")]),t._v(" 3.2具体方案1：warm standby or log shipping")]),t._v(" "),n("p",[t._v("https://www.postgresql.org/docs/current/warm-standby.html")]),t._v(" "),n("p",[t._v("The primary server operates in continuous archiving mode, while each standby server operates in continuous recovery mode, reading the WAL(write ahead logging) files from the primary(Directly moving WAL records from one database server to another is typically described as log shipping).")]),t._v(" "),n("h3",{attrs:{id:"_3-3-具体方案2-hot-standby"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-具体方案2-hot-standby"}},[t._v("#")]),t._v(" 3.3 具体方案2：hot standby")]),t._v(" "),n("p",[t._v("https://www.postgresql.org/docs/current/hot-standby.html")]),t._v(" "),n("h3",{attrs:{id:"_3-4-具体配置-温备-热备"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-具体配置-温备-热备"}},[t._v("#")]),t._v(" 3.4 具体配置 温备/热备")]),t._v(" "),n("p",[t._v("http://www.mamicode.com/info-detail-2466322.html")]),t._v(" "),n("h2",{attrs:{id:"_4-integreation-drivers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-integreation-drivers"}},[t._v("#")]),t._v(" 4. Integreation - Drivers")]),t._v(" "),n("p",[t._v("download: https://jdbc.postgresql.org/download.html")]),t._v(" "),n("h3",{attrs:{id:"_4-1-java"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-java"}},[t._v("#")]),t._v(" 4.1 Java")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("pom.xml:\n<dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-jdbc</artifactId>\n        </dependency>\n        \napplication.yml:       \nspring:\n  ##Druid DataSource数据库访问配置\n  datasource:\n    #is-dynamic-datasource: true\n    type: com.alibaba.druid.pool.DruidDataSource\n    url: jdbc:postgresql://HOST:5432/test\n    username: postgres\n    password: postgres\n    driver-class-name: org.postgresql.Driver\n    druid:\n      #连接池配置\n      #初始化时建立物理连接的个数\n      initialSize: 1\n      #最小连接池数量\n      minIdle: 0\n      #最大连接池数量\n      maxActive: 5\n      #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，\n      #如果需要可以通过配置useUnfairLock属性为true使用非公平锁。\n      maxWait: 60000\n      #配置相隔多久进行一次检测(检测可以关闭的空闲连接),此处设置为1分钟检测一次。\n      timeBetweenEvictionRunsMillis: 60000\n      #一个连接在池中最小生存的时间(ms),此处设置为半小时。\n      minEvictableIdleTimeMillis: 1800000\n      #一个连接在池中最大生存的时间(ms),此处设置为7天。\n      maxEvictableIdleTimeMillis: 25200000\n      #用来检测连接是否有效的sql; 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会启作用。\n      validationQuery: SELECT 1 FROM DUAL\n      #检测连接是否有效的超时时间,默认-1(单位:秒).\n      validationQueryTimeout: 5\n      #建议配置为true，不影响性能，并且保证安全性，申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，\n      #执行validationQuery检测连接是否有效。\n      testWhileIdle: true\n      #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\n      testOnBorrow: false\n      #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能\n      testOnReturn: false\n      #是否缓存preparedStatement，也就是PSCache;PSCache对支持游标的数据库性能提升巨大，比如说oracle;\n      #在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。\n      poolPreparedStatements: true\n      #打开PSCache，并且指定每个连接上PSCache的大小\n      maxPoolPreparedStatementPerConnectionSize: 20\n      sharePreparedStatements: false\n      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n      #connectionProperties: druid.stat.mergeSql=true;druid.stat.logSlowSql=true;druid.stat.slowSqlMillis=5000\n      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙\n      filters: stat,wall,log4j2\n      #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。\n      #在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100\n      #此处默认为-1\n      maxOpenPreparedStatements: 10\n      #合并多个DruidDataSource的监控数据\n      useGlobalDataSourceStat: true\n      \n      \n@Service(\"jdbcService\")\npublic class JdbcServiceImpl implements JdbcService{\n    private Logger logger = LoggerFactory.getLogger(getClass());\n\n    @Autowired\n    public DataSource dataSource;\n    \n    @Autowired\n    JdbcTemplate jdbcTemplate;\n\n    private Connection connection;\n\n    public Connection getConnection() {\n        try {\n            if (connection == null || connection.isClosed()) {\n                connection = initConnection();\n            }\n        } catch (SQLException e) {\n            logger.error(\"Initialize connection failed: {}\", e.getMessage(), e);\n        }\n        return connection;\n    }\n\n    public Connection initConnection(){\n        Connection conn = null;\n        try {\n            conn = dataSource.getConnection();\n            conn.setAutoCommit(false);\n        } catch (SQLException e) {\n            logger.error(\"Initialize connection failed: {}\", e.getMessage(), e);\n        }\n        return conn;\n    }\n\n\n    @Override\n    public void savetList(List<Test> list) {\n        String sql = \"insert into t_table(col1,col2) select ?,?,?,? where not exists (select col1 from t_table where col1=?)\";\n        jdbcTemplate.batchUpdate(sql, list, 10000, new ParameterizedPreparedStatementSetter<Test>() {\n            @Override\n            public void setValues(java.sql.PreparedStatement ps, Test ac) throws SQLException {\n                ps.setString(1, ac.getName());\n                ps.setBigDecimal(2, ac.getValue());\n            }\n        });\n    }\n\n    @Override\n    public void callPgFunction() {\n        final SimpleJdbcCall jdbcCall = new SimpleJdbcCall(jdbcTemplate).withFunctionName(\"pg_calc_rate\");\n        final Map<String, Object> result = jdbcCall.execute();\n\n        logger.info(\"jdbcCall result: {}\",result.get(\"returnvalue\"));\n    }\n\npg_calc_rate:\n\nCREATE OR REPLACE FUNCTION public.pg_calc_rate()\n\tRETURNS integer\n\tLANGUAGE plpgsql\nAS $$\ndeclare\n\tv_condition integer := -100;\n\tv_product t_fundingrate.product%type := 'BTCP';\n\tv_session t_fundingrate.\"session\"%type := 'T+1';\n\tv_trade_date t_fundingrate.trade_date%type := to_char(current_date-1,'yyyymmdd');\n\tv_rate_type t_fundingrate.rate_type%type;\n\tv_funding_rate t_fundingrate.funding_rate%type;\n\tv_benchmark_price t_fundingrate.benchmark_price%type;\n\tresult integer;\nbegin\n\t\n\tif not exists (select * from t_askbidprice where price_time/1000>=extract(epoch FROM cast(current_date-interval '1 day'+interval '19 hour'+interval '1 minute' as text)::timestamp AT TIME ZONE 'SGT')::int\n    and price_time/1000<=extract(epoch FROM cast(current_date+interval '5 hour' as text)::timestamp AT TIME ZONE 'SGT')::int) then\n\t\traise info 'Not exists impactmid data between [%,%]',cast(current_date-interval '1 day'+interval '19 hour'+interval '1 minute' as text)::timestamp,cast(current_date+interval '5 hour' as text)::timestamp;\n\t\tv_condition := -200;\n\telsif not exists (select * from t_bticoin_index where index_time/1000>=extract(epoch FROM cast(current_date-interval '1 day'+interval '19 hour'+interval '1 minute' as text)::timestamp AT TIME ZONE 'SGT')::int) then\n\t\traise info 'Not exists bticoin_index data >= %',cast(current_date-interval '1 day'+interval '19 hour'+interval '1 minute' as text)::timestamp;\n    \tv_condition := -100;\n\telsif not exists (select * from t_bticoin_index where index_time/1000>=extract(epoch FROM cast(current_date+interval '5 hour' as text)::timestamp AT TIME ZONE 'SGT')::int) then\n    \traise info 'Not exists bticoin_index data >= %',cast(current_date+interval '5 hour' as text)::timestamp;\n    \traise info 'To generate Tentative funding rate';\n    \tv_condition := 0;\n    \tv_rate_type := 'Tentative'; \n    else\n\t\traise info 'To generate Confirmed funding rate';\n\t\tv_condition := 100;\n\t\tv_rate_type := 'Confirmed';\n\tend if;\n\n\tif v_condition >= 0 then\n\t\t\n\t\tselect funding_rate,benchmark_price\n\t\tinto v_funding_rate,v_benchmark_price\n\t\tfrom(\n\t\t\tselect \n\t\t\tavg((GREATEST(0::decimal,t2.impact_bid_price-t1.index_value)-GREATEST(0::decimal,t1.index_value-t2.impact_ask_price))/t1.index_value) as funding_rate,\n\t\t\tavg(t1.index_value) as benchmark_price\n\t\t\tfrom t_bticoin_index t1 \n\t\t\tinner join t_askbidprice t2 on t1.index_name=t2.product and t1.index_time=t2.price_time\n\t\t\twhere t1.index_time/1000<=\n\t\t\textract(epoch FROM cast(current_date+interval '5 hour' as text)::timestamp AT TIME ZONE 'SGT')::int\n\t\t\tand t1.index_time/1000>=\n\t\t\textract(epoch FROM cast(current_date-interval '1 day'+interval '19 hour'+interval '1 minute' as text)::timestamp AT TIME ZONE 'SGT')::int\n\t\t\tgroup by t1.index_name\n\t\t) t;\n\t\t\n\t\tif exists (select * from t_fundingrate where product=v_product and \"session\"=v_session and trade_date=v_trade_date) then\n\t\t\traise info 'Update exists record product=%,session=%,trade_date=%',v_product,v_session,v_trade_date;\n\t\t\tupdate t_fundingrate set funding_rate=v_funding_rate,remark=v_rate_type,rate_type=v_rate_type,publish_time=(extract(epoch from now())*1000)::bigint,benchmark_price=v_benchmark_price\n\t\t\twhere product=v_product and \"session\"=v_session and trade_date=v_trade_date;\n\t\telse\n\t\t\traise info 'Insert new record';\n\t\t\tinsert into t_fundingrate\n\t\t\t(product, \"session\", trade_date, funding_rate, remark, rate_type, publish_time, benchmark_price, currency)\n\t\t\t\tselect v_product,v_session,v_trade_date, v_funding_rate,\n\t\t\t\tv_rate_type,v_rate_type,(extract(epoch from now())*1000)::bigint,v_benchmark_price,'USD';\n\t\tend if;\n\t\t\n\tend if;\n\tselect v_condition into result;\n    RETURN result;\nEND;\n$$\n;\n\n\n")])])]),n("h3",{attrs:{id:"_4-2-net-npgsql"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-net-npgsql"}},[t._v("#")]),t._v(" 4.2 .NET npgsql")]),t._v(" "),n("p",[t._v("https://github.com/npgsql")]),t._v(" "),n("p",[n("strong",[t._v("about composite array")]),t._v("\nNormal Array")]),t._v(" "),n("p",[t._v("Array of Composite Type (custom type)\nFeature added in 4.0\nhttp://www.npgsql.org/doc/release-notes/4.0.html\nhttps://github.com/npgsql/npgsql/blob/fc1e183103ac6246bcb5d7ceacbf509e18248583/test/Npgsql.Tests/Types/CompositeTests.cs\nhttps://github.com/npgsql/npgsql/commit/fc1e183103ac6246bcb5d7ceacbf509e18248583")]),t._v(" "),n("p",[t._v("Composite\nhttps://github.com/npgsql/npgsql/issues/1678")]),t._v(" "),n("p",[t._v("Why do I get “Invalid attempt to call HasRows when reader is closed” with an open connection? https://stackoverflow.com/questions/13968342/why-do-i-get-invalid-attempt-to-call-hasrows-when-reader-is-closed-with-an-ope")]),t._v(" "),n("p",[n("strong",[t._v("about inout parameters in stored procedure")]),t._v("\n这个问题是我测试当时最新版本的postgresql并且用了最新的npgsql driver的时候遇到一个问题，\n就是存储过程的inout参数拿不到返回结果，经过研究发现奇怪的行为：\n1.通过更改npgsql的代码采用simple query这种不安全的协议就可以拿到结果；\n2.但是用ngpsql自身默认的extend协议就拿不到；\n后来跟ngpsql作者沟通，npgsql作者又跟pgsql的团队沟通，证明确实是pgsql的一个bug，沟通见下面我提的ticket：\nINOUT parameters from Procedure\nhttps://github.com/npgsql/npgsql/issues/2078\nhttps://github.com/npgsql/npgsql/issues/2006")]),t._v(" "),n("p",[t._v("下面是我思考并研究的大致过程，\n大致思路就是我发现用某些pgsql客户端调用这种存储过程有返回，有些没有返回，比如pgadmin有返回，dbeaver没有返回，\n所以就抓包pgadmin，对比通过npgsql调用的包，最后发现pgadmin是用simple query方式调用，\n所以最终修改了npgsql驱动让其支持simple query，因为本身simple query就不安全，所以我没有给出代码，\n当然如果有人感兴趣可以联系我")]),t._v(" "),n("p",[t._v("Test Scripts")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("call pg_test('9cc4afef-aab7-4c35-bdcd-a9f3d0152eb4','');\n\nbegin\ncall pg_test2('9cc4afef-aab7-4c35-bdcd-a9f3d0152eb4','');\nfetch all in cur;\ncommit;\nend\n\n-- PROCEDURE: sgc2.pg_test(character varying, text)\n\n-- DROP PROCEDURE sgc2.pg_test(character varying, text);\n\nCREATE OR REPLACE PROCEDUREpg_test(\n\tuserid character varying,\n\tINOUT results text)\nLANGUAGE 'plpgsql'\n\nAS $BODY$\nDECLARE\n\nBEGIN\n\t\n\tselect cast(999 as decimal) as result;\n\nEND;\n$BODY$;\n")])])]),n("p",[t._v("c# code:")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('public string Execute2(string spName, IEnumerable<NpgsqlParameter> parameters)\n       {\n           string result;\n           try\n           {\n               using (var conn = new NpgsqlConnection(_connectionString))\n               {\n                   conn.Open();\n                   List<NpgsqlParameter> _params = parameters.ToList();\n                   using (var cmd = conn.CreateCommand())\n                   {\n                       _params.Add(new NpgsqlParameter("", "")); // Add empty string for refcursor param\n                       cmd.CommandText = BuildQuery(spName, _params);\n                       //cmd.Parameters.Add(new NpgsqlParameter() { ParameterName = "results", Direction = ParameterDirection.InputOutput, Value = "" });\n                       var res = cmd.ExecuteScalar();\n                       result = res?.ToString();\n                  \n                   }\n                   //string sql = "select pg_test3(\'9cc4afef-aab7-4c35-bdcd-a9f3d0152eb4\');";\n                   //var cmd2 = new NpgsqlCommand(sql, conn);\n                   //var result2 = cmd2.ExecuteScalar();\n                   //var test = JsonConvert.DeserializeObject<ResultModel>(result);\n                   conn.Close();\n               }\n           }\n           catch (Exception e)\n           {\n               _log.Exception(e);\n               throw;\n           }\n           return result;\n       }\n\n')])])]),n("p",[t._v("debug output:\nCheck from Immediate window\nSystem.Text.Encoding.Default.GetString(Buffer)")]),t._v(" "),n("p",[n("img",{attrs:{src:"/docs/docs_image/software/postgresql/postgresql05.png",alt:""}})]),t._v(" "),n("p",[t._v("然后用wireshark抓包请求call sp之后的返回\n"),n("img",{attrs:{src:"/docs/docs_image/software/postgresql/postgresql06.png",alt:""}})]),t._v(" "),n("p",[t._v("Failed idea: Compare with SP which has return value(refcursor)\nNot what I want!\n"),n("img",{attrs:{src:"/docs/docs_image/software/postgresql/postgresql07.png",alt:""}})]),t._v(" "),n("p",[t._v("Idea: compare with pgadmin4, because pgadmin4 works!\n"),n("img",{attrs:{src:"/docs/docs_image/software/postgresql/postgresql08.png",alt:""}})]),t._v(" "),n("p",[t._v("改源码 simple query\n"),n("img",{attrs:{src:"/docs/docs_image/software/postgresql/postgresql09.png",alt:""}}),t._v("\n有返回，离成功近了")]),t._v(" "),n("p",[t._v("但是npg抛错\n"),n("img",{attrs:{src:"/docs/docs_image/software/postgresql/postgresql10.png",alt:""}})]),t._v(" "),n("p",[t._v("Idea: Compare with simple function( and procedure) to observer the result\n"),n("img",{attrs:{src:"/docs/docs_image/software/postgresql/postgresql11.png",alt:""}})]),t._v(" "),n("p",[t._v("最终\n"),n("img",{attrs:{src:"/docs/docs_image/software/postgresql/postgresql12.png",alt:""}})]),t._v(" "),n("p",[t._v("Nuget\nUpdate-Package –reinstall\nhttps://docs.microsoft.com/en-us/nuget/consume-packages/reinstalling-and-updating-packages")]),t._v(" "),n("p",[t._v("Simple query\nhttps://www.postgresql.org/docs/10/static/protocol-flow.html#id-1.10.5.7.4\nMessage flow\nhttps://www.postgresql.org/docs/10/static/protocol-flow.html")]),t._v(" "),n("p",[t._v("Explain\nhttps://www.postgresql.org/docs/9.5/static/sql-explain.html")]),t._v(" "),n("p",[t._v("Refer\nhttps://www.asciitable.com")]),t._v(" "),n("h2",{attrs:{id:"_5-gaps-between-oracle-plsql-and-postgresql"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-gaps-between-oracle-plsql-and-postgresql"}},[t._v("#")]),t._v(" 5. Gaps between Oracle PLSQL and PostgreSQL")]),t._v(" "),n("p",[t._v("https://github.com/digoal/blog/blob/master/201607/20160714_01.md")]),t._v(" "),n("p",[t._v("https://wiki.postgresql.org/wiki/Oracle_to_Postgres_Conversion")]),t._v(" "),n("h3",{attrs:{id:"_5-1-oracle-keep-dense-rank-change-in-postgresql"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-oracle-keep-dense-rank-change-in-postgresql"}},[t._v("#")]),t._v(" 5.1 oracle keep dense_rank CHANGE in postgresql")]),t._v(" "),n("p",[t._v("https://www.eversql.com/rank-vs-dense_rank-vs-row_number-in-postgresql/")]),t._v(" "),n("h3",{attrs:{id:"_5-2-oracle-is-record-is-table-change-in-postgresql"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-oracle-is-record-is-table-change-in-postgresql"}},[t._v("#")]),t._v(" 5.2 oracle is record, is table CHANGE in postgresql")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("type rec_tk is record(\n\ttkno VARCHAR2(100),\n\tcg_zdj number(12, 0) := 0,\n\tcg_jsf number(12, 0) := 0\n);\ntype tklist is table of rec_tk index by binary_integer;\n")])])]),n("p",[t._v("修改为")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("create type rec_tk as(\ntkno VARCHAR(100),\ncg_zdj numeric(12,0),\ncg_jsf numeric(12,0)\n);\n\n#函数外执行创建类型的SQL\ncreate type rec_cjr as(\ncjrid varchar(30),\ntk rec_tk[]\n);\n#函数内对table的使用修改为数组的使用，数组的下标从1开始\np_cjrs rec_cjr[];\n")])])]),n("h2",{attrs:{id:"_6-system-table"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-system-table"}},[t._v("#")]),t._v(" 6. System Table")]),t._v(" "),n("p",[t._v("select * FROM information_schema.triggers")]),t._v(" "),n("h2",{attrs:{id:"troubleshooting"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting"}},[t._v("#")]),t._v(" Troubleshooting")]),t._v(" "),n("p",[t._v("删除“重复”的function或stored procedure，比如：bpchar和varchar：\n"),n("img",{attrs:{src:"/docs/docs_image/software/postgresql/postgresql01.png",alt:""}})]),t._v(" "),n("p",[t._v("psql: error: FATAL: Ident authentication failed\nTo configure IDENT authentication, add entries to the /etc/postgresql/12/main/pg_ident.conf file. There are detailed comments in the file to guide you.")]),t._v(" "),n("h2",{attrs:{id:"todo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#todo"}},[t._v("#")]),t._v(" todo")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("CREATE OR REPLACE FUNCTION public.pg_calc_nightsession_funding_rate()\n RETURNS integer\n LANGUAGE plpgsql\nAS $function$\ndeclare\n\tv_condition integer := -100;\n\tv_nightsession_flag boolean := false;\n\tv_from_timestamp integer;\n\tv_to_timestamp integer;\n\tv_total_points_count integer;\n\tv_instrument t_fundingrate.instrument%type := 'BTCP';\n\tv_session t_fundingrate.\"session\"%type := 'T';\n\tv_trade_date t_fundingrate.trade_date%type := to_char(current_date,'yyyymmdd');\n\tv_rate_type t_fundingrate.rate_type%type;\n\tv_funding_rate t_fundingrate.funding_rate%type;\n\tv_benchmark_price t_fundingrate.benchmark_price%type;\n\tresult integer;\nbegin\n\tif CURRENT_TIMESTAMP>=cast(current_date+interval '19 hour'+interval '1 minute' as text)::timestamp then\n\t\tv_nightsession_flag := true;\n\tend if;\n\t\n\tif v_nightsession_flag then\n\t\tv_from_timestamp := extract(epoch from cast(current_date+interval '19 hour'+interval '1 minute' as text)::timestamp AT TIME ZONE 'SGT')::int;\n\t\tv_to_timestamp := extract(epoch from now())::int;\n\telse\n\t\tv_from_timestamp := extract(epoch from cast(current_date-interval '1 day'+interval '19 hour'+interval '1 minute' as text)::timestamp AT TIME ZONE 'SGT')::int;\n\t\tv_to_timestamp := extract(epoch from cast(current_date+interval '5 hour' as text)::timestamp AT TIME ZONE 'SGT')::int;\n\tend if;\n\n\tif extract(dow from current_date)::int = 5 and v_nightsession_flag then\n\t\tv_trade_date := to_char(current_date+3,'yyyymmdd');\n\t\traise info 'Next trading date is %',v_trade_date;\n\telsif extract(dow from current_date)::int = 6 then\n\t\tv_trade_date := to_char(current_date+2,'yyyymmdd');\n\t\traise info 'Next trading date is %',v_trade_date;\n\tend if;\n\t\n\tif not exists (select * from t_impactmid where price_time/1000>=v_from_timestamp and price_time/1000<=v_to_timestamp) then\n\t\traise info 'Not exists impactmid data between [%,%]',v_from_timestamp,v_to_timestamp;\n\t\tv_condition := -200;\n\telsif not exists (select * from t_bticoin_index where index_time/1000>=v_from_timestamp) then\n\t\traise info 'Not exists bticoin_index data >= %',v_from_timestamp;\n    \tv_condition := -100;\n\telsif v_nightsession_flag or not exists (select * from t_bticoin_index where index_time/1000>=v_to_timestamp) then\n    \traise info 'To generate Tentative funding rate';\n    \tv_condition := 0;\n    \tv_rate_type := 'Tentative'; \n    else\n    \tselect count(1) into v_total_points_count from t_bticoin_index \n\t\twhere extract(second from to_timestamp(index_time/1000)) = '00' \n\t\t\tand index_time/1000<=v_to_timestamp\n\t\t\tand index_time/1000>=v_from_timestamp;\n    \tif v_total_points_count <= 300 then\n\t\t\traise info 'bticoin_index data is less than 50 percent';\n\t\t\tv_condition := -300;\n\t\telse\n\t\t\traise info 'To generate Confirmed funding rate';\n\t\t\tv_condition := 100;\n\t\t\tv_rate_type := 'Confirmed';\n\t\tend if;\n\tend if;\n\n\tif v_condition >= 0 then\n\t\t\n\t\tselect funding_rate,benchmark_price\n\t\tinto v_funding_rate,v_benchmark_price\n\t\tfrom(\n\t\t\tselect \n\t\t\tavg((GREATEST(0::decimal,t2.impact_bid_price-t1.index_value)-GREATEST(0::decimal,t1.index_value-t2.impact_ask_price))/t1.index_value) as funding_rate,\n\t\t\tavg(t1.index_value) as benchmark_price\n\t\t\tfrom t_bticoin_index t1 \n\t\t\tinner join t_impactmid t2 on t1.index_name=t2.instrument and t1.index_time=t2.price_time\n\t\t\twhere t1.index_time/1000<=v_to_timestamp and t1.index_time/1000>=v_from_timestamp\n\t\t\tgroup by t1.index_name\n\t\t) t;\n\t\t\n\t\tif exists (select * from t_fundingrate where instrument=v_instrument and \"session\"=v_session and trade_date=v_trade_date) then\n\t\t\traise info 'Update exists record instrument=%,session=%,trade_date=%',v_instrument,v_session,v_trade_date;\n\t\t\tupdate t_fundingrate set funding_rate=v_funding_rate,remark=v_rate_type,rate_type=v_rate_type,publish_time=(extract(epoch from now())*1000)::bigint,benchmark_price=v_benchmark_price\n\t\t\twhere instrument=v_instrument and \"session\"=v_session and trade_date=v_trade_date;\n\t\telse\n\t\t\traise info 'Insert new record';\n\t\t\tinsert into t_fundingrate\n\t\t\t(instrument, \"session\", trade_date, funding_rate, remark, rate_type, publish_time, benchmark_price, currency)\n\t\t\t\tselect v_instrument,v_session,v_trade_date, v_funding_rate,\n\t\t\t\tv_rate_type,v_rate_type,(extract(epoch from now())*1000)::bigint,v_benchmark_price,'USD';\n\t\tend if;\n\t\t\n\tend if;\n\tselect v_condition into result;\n    RETURN result;\nEND;\n$function$\n;\n\n")])])]),n("p",[t._v("refer:")]),t._v(" "),n("p",[t._v("https://www.tutorialspoint.com/postgresql/index.htm\nhttps://serverfault.com/questions/110154/whats-the-default-superuser-username-password-for-postgres-after-a-new-install")]),t._v(" "),n("p",[t._v("https://serverfault.com/questions/110154/whats-the-default-superuser-username-password-for-postgres-after-a-new-install")]),t._v(" "),n("p",[t._v("10个使用POSTGRESQL 需要避免的错误\nhttps://mp.weixin.qq.com/s/DD27oiNL7_qNzgHN6S0XJw")]),t._v(" "),n("disqus")],1)}),[],!1,null,null,null);e.default=a.exports}}]);