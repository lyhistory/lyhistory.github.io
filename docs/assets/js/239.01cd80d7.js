(window.webpackJsonp=window.webpackJsonp||[]).push([[239],{665:function(e,n,t){"use strict";t.r(n);var s=t(65),r=Object(s.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("关于ipv4可以参考《vm_env_network》")]),e._v(" "),t("h2",{attrs:{id:"基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[e._v("#")]),e._v(" 基础")]),e._v(" "),t("p",[e._v("https://docs.microsoft.com/en-us/previous-versions/aa917150(v=msdn.10)?redirectedfrom=MSDN#address-space-allocation")]),e._v(" "),t("p",[e._v("http://www.steves-internet-guide.com/ipv6-guide/")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("The Google Public DNS IP addresses (IPv4) are as follows:\n8.8.8.8\n8.8.4.4\nThe Google Public DNS IPv6 addresses are as follows:\n2001:4860:4860::8888\n2001:4860:4860::8844\n")])])]),t("p",[t("strong",[e._v("Great Feature: dual stack")]),e._v("\n只需要监听ipv6，同时可以通过ipv4访问了！\nIPv6 only bound services accessible from IPv4 on dual stack Linux host: how does it work?\nhttps://serverfault.com/questions/992612/ipv6-only-bound-services-accessible-from-ipv4-on-dual-stack-linux-host-how-does?rq=1")]),e._v(" "),t("h2",{attrs:{id:"路由器-宿主机-virtualbox"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#路由器-宿主机-virtualbox"}},[e._v("#")]),e._v(" 路由器-宿主机-virtualbox")]),e._v(" "),t("p",[e._v("使用virtualbox的kali os在用gvm的时候，community的feed只能通过ipv6访问，没办法需要设置，初次使用ipv6，没有经验，只好一点点排查")]),e._v(" "),t("h3",{attrs:{id:"虚拟机初诊"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#虚拟机初诊"}},[e._v("#")]),e._v(" 虚拟机初诊")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("root@kali:/home/lyhistory# ifconfig\neth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 192.168.0.109  netmask 255.255.255.0  broadcast 192.168.0.255\n        inet6 fe80::a00:27ff:febf:e259  prefixlen 64  scopeid 0x20<link>\n        ether 08:00:27:bf:e2:59  txqueuelen 1000  (Ethernet)\n        RX packets 24570460  bytes 17931282838 (16.6 GiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 26028492  bytes 3906774798 (3.6 GiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10<host>\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 921143  bytes 586075462 (558.9 MiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 921143  bytes 586075462 (558.9 MiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n    \n上面默认只有一个 link类型的ipv6，后来知道需要一个global的才行，所以肯定ping不通：\n\nroot@kali:/home/lyhistory# ping6 ipv6.google.com\nping6: connect: Network is unreachable\nroot@kali:/home/lyhistory# traceroute ipv6.google.com\ntraceroute to ipv6.google.com (2404:6800:4003:c04::65), 30 hops max, 80 byte packets\nconnect: Network is unreachable\n\n看看路由信息：\nroot@kali:/home/lyhistory# ip -6 route show\n::1 dev lo proto kernel metric 256 pref medium\nfe80::/64 dev eth0 proto kernel metric 256 pref medium\n可以看到路由都是在本地，一个localhost，一个link网关，没有到宿主机上的\n\nroot@kali:/home/lyhistory# route -6\nKernel IPv6 routing table\nDestination                    Next Hop                   Flag Met Ref Use If\nlocalhost/128                  [::]                       U    256 1     0 lo\nfe80::/64                      [::]                       U    256 1     0 eth0\n[::]/0                         [::]                       !n   -1  1     0 lo\nlocalhost/128                  [::]                       Un   0   4     0 lo\nfe80::a00:27ff:febf:e259/128   [::]                       Un   0   2     0 eth0\nff00::/8                       [::]                       U    256 2     0 eth0\n[::]/0                         [::]                       !n   -1  1     0 lo\n\n")])])]),t("h3",{attrs:{id:"宿主机诊断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#宿主机诊断"}},[e._v("#")]),e._v(" 宿主机诊断")]),e._v(" "),t("p",[e._v("发现宿主机也就是我的win10的ipv6都不工作，所以vm自然更不工作")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Wireless LAN adapter Wi-Fi:\n\n   Connection-specific DNS Suffix  . :\n   Description . . . . . . . . . . . : Intel(R) Dual Band Wireless-AC 8265\n   Physical Address. . . . . . . . . : 00-28-F8-22-E9-5D\n   DHCP Enabled. . . . . . . . . . . : Yes\n   Autoconfiguration Enabled . . . . : Yes\n   Link-local IPv6 Address . . . . . : fe80::61e4:8e32:fb58:74a4%26(Preferred)\n   IPv4 Address. . . . . . . . . . . : 192.168.0.141(Preferred)\n   Subnet Mask . . . . . . . . . . . : 255.255.255.0\n   Lease Obtained. . . . . . . . . . : Tuesday, 17 November 2020 10:59:55 AM\n   Lease Expires . . . . . . . . . . : Tuesday, 24 November 2020 10:59:54 AM\n   Default Gateway . . . . . . . . . : 192.168.0.1\n   DHCP Server . . . . . . . . . . . : 192.168.0.1\n   DHCPv6 IAID . . . . . . . . . . . : 134228216\n   DHCPv6 Client DUID. . . . . . . . : 00-01-00-01-21-C8-05-55-00-28-F8-22-E9-5D\n   DNS Servers . . . . . . . . . . . : 172.17.5.36\n                                       172.17.5.4\n   NetBIOS over Tcpip. . . . . . . . : Enabled\n   \n这里也只是有一个link-local地址\n")])])]),t("p",[e._v("首先确定下是否开启了ipv6协议：")]),e._v(" "),t("p",[e._v("Control Panel\\Network and Internet\\Network Connections找到wifi右键属性")]),e._v(" "),t("p",[e._v('确实看到已经开启了"Internet协议版本6(TCP/IPV6)"')]),e._v(" "),t("p",[e._v("但是不管是检测还是ping都是提示“windows Ping request could not find host ipv6.google.com”")]),e._v(" "),t("p",[e._v("找到两种方法修复windows的ipv6")]),e._v(" "),t("p",[e._v("基于Teredo隧道开启IPv6和手动用netsh命令开启：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("首先尝试基于Teredo隧道开启IPv6\n// 设置 Teredo 服务器，默认为：win10.ipv6.microsoft.com    \nnetsh interface teredo set state enterpriseclient server=default       \n// 重置 IPv6 配置：netsh interface ipv6 reset\n出现一个新的伪网卡：\nTunnel adapter Teredo Tunneling Pseudo-Interface:\n\n   Connection-specific DNS Suffix  . :\n   Description . . . . . . . . . . . : Microsoft Teredo Tunneling Adapter\n   Physical Address. . . . . . . . . : 00-00-00-00-00-00-00-E0\n   DHCP Enabled. . . . . . . . . . . : No\n   Autoconfiguration Enabled . . . . : Yes\n   IPv6 Address. . . . . . . . . . . : 2001:0:2851:fcb0:85f:f5d:9a80:bd5b(Preferred)\n   Link-local IPv6 Address . . . . . : fe80::85f:f5d:9a80:bd5b%18(Preferred)\n   Default Gateway . . . . . . . . . : ::\n   DHCPv6 IAID . . . . . . . . . . . : 301989888\n   DHCPv6 Client DUID. . . . . . . . : 00-01-00-01-21-C8-05-55-00-28-F8-22-E9-5D\n   NetBIOS over Tcpip. . . . . . . . : Disabled\n\n// 测试 IPv6 连接     \nping -6 ipv6.test-ipv6.com     \n但是无法ping通，但是至少可以resolve了：\nPinging ipv6.test-ipv6.com [2001:470:1:18::115] with 32 bytes of data:\nRequest timed out.\n\n然后看看另一种手动方式：\n正常开启cmd 输入 netsh\nnetsh>int\nnetsh>interface>ipv6\nnetsh>interface>ipv6>isatap\nnetsh>interface>ipv6>isatap>set router xxxxxxx(xxxxxx用本地网络ipv6路由地址替代)\nnetsh>interface>ipv6>isatap>set state enabled\nnetsh>interface>ipv6>isatap>quit\n但是这里说的本地网络ipv6路由地址怎么看，貌似要去路由器里面看\n")])])]),t("h3",{attrs:{id:"路由器设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#路由器设置"}},[e._v("#")]),e._v(" 路由器设置")]),e._v(" "),t("p",[e._v("所以最后想到路由器，根据路由器型号google：dlink868L ipv6 setting，发现原来路由器这里并没有开启ipv6！")]),e._v(" "),t("p",[e._v("https://www.dlink.com.sg/dir-868l-how-to-enable-ipv6-starhub/")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('Setup -> IPv6 \n步骤少了：from section "MANUAL IPV6 INTERNET CONNECTION SETUP", click "Manual IPv6 Internet Connection Setup"\nSelect Autoconfiguration (SLAAC / DHCPv6) from the drop down list as shown. \nClick on Save Settings. \n设置后，路由器参数：\n勾选状态：Obtain IPv6 DNS Servers automatically\n未勾选：Use the following IPv6 DNS Servers\n\tPrimary DNS Server:2404:e800:3:5::4\n\tSecondary DNS Server:2404:e800:3:3::36\n勾选状态：Enable DHCP-PD\n\tLAN IPv6 Address:2404:e801:2001:15cc:12be:f5ff:fe23:ff84 /64\n\tLAN IPv6 Link-Local Address:fe80::12be:f5ff:fe23:ff84 /64\n勾选状态：Enable Automatic IPv6 address assignment和Enable Automatic DHCP-PD in LAN\n\n重启电脑后终于成功了！\nC:\\WINDOWS\\system32>ping -6 ipv6.google.com\nPinging ipv6.l.google.com [2404:6800:4003:c03::64] with 32 bytes of data:\nReply from 2404:6800:4003:c03::64: time=5ms\n\n再来看下宿主机的网卡信息：\nWireless LAN adapter Wi-Fi:\n\n   Connection-specific DNS Suffix  . :\n   Description . . . . . . . . . . . : Intel(R) Dual Band Wireless-AC 8265\n   Physical Address. . . . . . . . . : 00-28-F8-22-E9-5D\n   DHCP Enabled. . . . . . . . . . . : Yes\n   Autoconfiguration Enabled . . . . : Yes\n   IPv6 Address. . . . . . . . . . . : 2404:e801:2001:15cc:61e4:8e32:fb58:74a4(Preferred)\n   Temporary IPv6 Address. . . . . . : 2404:e801:2001:15cc:50a0:58ff:5929:498f(Preferred)\n   Link-local IPv6 Address . . . . . : fe80::61e4:8e32:fb58:74a4%26(Preferred)\n   IPv4 Address. . . . . . . . . . . : 192.168.0.141(Preferred)\n   Subnet Mask . . . . . . . . . . . : 255.255.255.0\n   Lease Obtained. . . . . . . . . . : Wednesday, 9 December 2020 8:37:52 AM\n   Lease Expires . . . . . . . . . . : Wednesday, 16 December 2020 8:37:31 AM\n   Default Gateway . . . . . . . . . : fe80::12be:f5ff:fe23:ff84%26\n                                       192.168.0.1\n   DHCP Server . . . . . . . . . . . : 192.168.0.1\n   DHCPv6 IAID . . . . . . . . . . . : 134228216\n   DHCPv6 Client DUID. . . . . . . . : 00-01-00-01-21-C8-05-55-00-28-F8-22-E9-5D\n   DNS Servers . . . . . . . . . . . : 2404:e800:3:5::4\n                                       2404:e800:3:3::36\n                                       172.17.5.36\n                                       172.17.5.4\n                                       2404:e800:3:5::4\n                                       2404:e800:3:3::36\n   NetBIOS over Tcpip. . . . . . . . : Enabled\n   \n跟前面对比，多了：\nIPv6 Address / Temporary IPv6 Address / Default Gateway / DNS Servers\n再看看路由信息：\nIPv6 Route Table\n===========================================================================\nActive Routes:\n If Metric Network Destination      Gateway\n 26    306 ::/0                     fe80::12be:f5ff:fe23:ff84\n 26    306 2404:e801:2001:15cc::/64 On-link\n 26    306 2404:e801:2001:15cc:61e4:8e32:fb58:74a4/128\n                                    On-link\n 26    306 2404:e801:2001:15cc:6de3:d30a:6465:2a2f/128\n 26    306 fe80::/64                On-link\n 26    306 fe80::61e4:8e32:fb58:74a4/128\n                                    On-link\n 26    306 ff00::/8                 On-link\n \n 发现这个26应该就是对应前面的那个%26\n \n不过发现现在\nping google.com也直接是用ipv6了\n当然可以调整，让ipv4优先 prefer ipv4 over ipv6：\nC:\\WINDOWS\\system32>netsh interface ipv6 show prefixpolicies\nQuerying active state...\n\nPrecedence  Label  Prefix\n----------  -----  --------------------------------\n        50      0  ::1/128\n        40      1  ::/0\n        35      4  ::ffff:0:0/96\n        30      2  2002::/16\n         5      5  2001::/32\n         3     13  fc00::/7\n         1     11  fec0::/10\n         1     12  3ffe::/16\n         1      3  ::/96\n\nhttps://superuser.com/questions/436574/ipv4-vs-ipv6-priority-in-windows-7\n\n')])])]),t("h3",{attrs:{id:"回到virtualbox"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回到virtualbox"}},[e._v("#")]),e._v(" 回到virtualbox")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('vim /etc/network/interfaces\niface eth0 inet6 dhcp\n\nlyhistory@kali:~$ ifconfig\neth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 192.168.0.109  netmask 255.255.255.0  broadcast 192.168.0.255\n        inet6 fe80::a00:27ff:febf:e259  prefixlen 64  scopeid 0x20<link>\n        inet6 2404:e801:2001:15cc:a00:27ff:febf:e259  prefixlen 64  scopeid 0x0<global>\n        ether 08:00:27:bf:e2:59  txqueuelen 1000  (Ethernet)\n        RX packets 1663  bytes 254846 (248.8 KiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 1248  bytes 141779 (138.4 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10<host>\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 18  bytes 918 (918.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 18  bytes 918 (918.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\n可以看到多了个global的2404:e801:2001:15cc\n但是仍然无法ping通，看来dhcp还是有点问题，之前ipv4 也遇过类似问题，基本上是缺少gateway，通过设置静态ip解决\n\niface eth0 inet6 static\naddress 2404:e801:2001:15cc:a00:27ff:febf:e259\nnetmask 64\ngateway fe80::12be:f5ff:fe23:ff84%26 这里的%26坑死我了，https://superuser.com/questions/99746/why-is-there-a-percent-sign-in-the-ipv6-address，前面也指出了26就是route里面的If列\n\nifup eth0出错：\nRTNETLINK answers: File exists\n原因参考讨论：https://unix.stackexchange.com/questions/100588/using-ip-addr-instead-of-ifconfig-reports-rtnetlink-answers-file-exists-on-de\n解决方法是：\nip addr flush dev eth0 貌似只刷ipv4\nip -6 addr flush dev eth0 刷ipv6\n\nroot@kali:/home/lyhistory# ip -6 addr\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 state UNKNOWN qlen 1000\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 state UP qlen 1000\n    inet6 2404:e801:2001:15cc:a00:27ff:febf:e259/64 scope global \n       valid_lft forever preferred_lft forever\n通过flush这一折腾\n执行ifup eth0 又出错： Could not get a link-local address\n貌似前面的 link address：fe80::a00:27ff:febf:e259 没有了\n然后将static改成 iface eth0 inet6 dhcp\n重启机器，又回来了\n后来查到可以通过命令手动添加：ip address add dev eth0 scope link fe80::a00:27ff:febf:e259/64\n\n/etc/init.d/networking status 依然停止状态，试着将ipv6的静态ip设置注释掉，\nip addr flush dev eth0\nifup eth0\n/etc/init.d/networking restart 成功！\n然后试着将ipv4静态ip设置注释掉，开启ipv6静态ip是\nroot@kali:/home/lyhistory# ifup eth0\nError: inet6 address is expected rather than "fe80::12be:f5ff:fe23:ff84%26".\nifup: failed to bring up eth0\n这里终于给出真正原因了，就是%26的原因，修改静态ip设置，去除gateway后面的这个%26，并开启ipv4的静态ip设置，再试：\nroot@kali:/home/lyhistory# ifdown eth0\nRTNETLINK answers: No such process\nRTNETLINK answers: Cannot assign requested address\nRTNETLINK answers: No such process\nRTNETLINK answers: Cannot assign requested address\nroot@kali:/home/lyhistory# ifup eth0\nWaiting for DAD... Done\n\nroot@kali:/home/lyhistory# ifconfig\neth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 192.168.0.109  netmask 255.255.255.0  broadcast 192.168.0.255\n        inet6 fe80::a00:27ff:febf:e259  prefixlen 64  scopeid 0x20<link>\n        inet6 2404:e801:2001:15cc:a00:27ff:febf:e259  prefixlen 64  scopeid 0x0<global>\n        ether 08:00:27:bf:e2:59  txqueuelen 1000  (Ethernet)\n        RX packets 6276  bytes 1036194 (1011.9 KiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 131  bytes 11424 (11.1 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10<host>\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 24  bytes 1152 (1.1 KiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 24  bytes 1152 (1.1 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\n然后设置DNS:\nvim /etc/resolv.conf\n添加 2001:4860:4860::8888\n\n\nroot@kali:/home/lyhistory# ping6 ipv6.google.com\nPING ipv6.google.com(2404:6800:4003:c04::8a (2404:6800:4003:c04::8a)) 56 data bytes\n64 bytes from 2404:6800:4003:c04::8a (2404:6800:4003:c04::8a): icmp_seq=1 ttl=107 time=9.67 ms\n成功了！\n\nroot@kali:/home/lyhistory# ip -6 route\n::1 dev lo proto kernel metric 256 pref medium\n2404:e801:2001:15cc::/64 dev eth0 proto kernel metric 256 pref medium\nfe80::/64 dev eth0 proto kernel metric 256 pref medium\ndefault via fe80::12be:f5ff:fe23:ff84 dev eth0 metric 1024 onlink pref medium\n可以看到这里多了一个到宿主机的网关路由2404:e801:2001:15cc::/64\n\nroot@kali:/home/lyhistory# route -6\nKernel IPv6 routing table\nDestination                    Next Hop                   Flag Met Ref Use If\nlocalhost/128                  [::]                       U    256 2     0 lo\n2404:e801:2001:15cc::/64       [::]                       U    256 1     0 eth0\nfe80::/64                      [::]                       U    256 1     0 eth0\n[::]/0                         fe80::12be:f5ff:fe23:ff84  UGH  1024 3     0 eth0\nlocalhost/128                  [::]                       Un   0   5     0 lo\n2404:e801:2001:15cc:a00:27ff:febf:e259/128 [::]                       Un   0   4     0 eth0\nfe80::a00:27ff:febf:e259/128   [::]                       Un   0   3     0 eth0\nff00::/8                       [::]                       U    256 3     0 eth0\n[::]/0                         [::]                       !n   -1  1     0 lo\n\n当然还有命令行可以添加gateway和route，没有尝试：\nThe following CLI command configures the IPv6 default gateway.\n#ipv6 default-gateway <ipv6-address> <cost>\n                                         \nThe following CLI command configures static IPv6 routes.\n#ipv6 route <ipv6-prefix/prefix-length> <ipv6-next-hop> <cost> <ipv6-next-hop>  = X:X:X:X::X \n\n')])])]),t("p",[e._v("参考：")]),e._v(" "),t("p",[e._v("https://www.365jz.com/article/24427")]),e._v(" "),t("p",[e._v("https://blog.csdn.net/Dzjian_/article/details/79886454")]),e._v(" "),t("p",[e._v("https://forums.he.net/index.php?topic=3489.0")]),e._v(" "),t("p",[e._v("静态ipv6")]),e._v(" "),t("p",[e._v("https://blog.csdn.net/aliaichidantong/article/details/102637413")]),e._v(" "),t("p",[e._v("https://blog.csdn.net/tjhon/article/details/12499329")]),e._v(" "),t("p",[e._v("https://blog.csdn.net/aliaichidantong/article/details/101208299")]),e._v(" "),t("p",[e._v("ipv6排错：")]),e._v(" "),t("p",[e._v("https://ssygw.com/91.html")]),e._v(" "),t("p",[e._v("https://zhuanlan.zhihu.com/p/128933023")]),e._v(" "),t("p",[e._v("vim /etc/sysctl.conf")]),e._v(" "),t("p",[e._v("net.ipv6.conf.all.forwarding=1")]),e._v(" "),t("disqus")],1)}),[],!1,null,null,null);n.default=r.exports}}]);