(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{342:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("https://webassembly.org/")]),t._v(" "),s("p",[t._v("https://developer.mozilla.org/en-US/docs/WebAssembly/Concepts")]),t._v(" "),s("p",[t._v("https://www.youtube.com/watch?v=cbB3QEwWMlA")]),t._v(" "),s("p",[t._v("WebAssembly (abbreviated "),s("em",[t._v("Wasm")]),t._v(") is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications.")]),t._v(" "),s("p",[t._v("基本上就是可以在浏览器的vm中执行的二进制程序，该程序可以通过各种语言如c/c++/c#等开发，然后通过一些工具进行转换，比如emscripten: convert a c/c++ program to webassembly")]),t._v(" "),s("p",[t._v("当然对于web开发者最容易的方式是通过assemblyscript开发，通过nodejs npm安装创建项目：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm install --save-dev assemblyscript\n\nnpx asinit .\n")])])]),s("p",[t._v("然后使用ts文件格式即typescript（必须使用强类型，而不是普通的js的动态弱类型）开发，开发之后，编译成wasm格式的binary文件，然后在普通的js中就可以使用webassembly api来实例化调用")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>WASM instantiateStreaming() test</title>\n  </head>\n  <body>\n    <script>\n      var importObject = { imports: { imported_func: arg => console.log(arg) } };\n\n      WebAssembly.instantiateStreaming(fetch('simple.wasm'), importObject)\n      .then(obj => obj.instance.exports.exported_func());\n    <\/script>\n  </body>\n</html>\n")])])]),s("p",[t._v("所以浏览器的vm会同时执行js和wasm，两者不是替代，而是并存关系")])])}),[],!1,null,null,null);e.default=n.exports}}]);