(window.webpackJsonp=window.webpackJsonp||[]).push([[189],{640:function(t,e,a){"use strict";a.r(e);var n=a(65),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("首先当然是先购买vps了，"),a("a",{attrs:{href:"/docs/software/network/vps"}},[t._v("推荐：传送前去机场")])]),t._v(" "),a("h2",{attrs:{id:"基本安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本安装"}},[t._v("#")]),t._v(" 基本安装")]),t._v(" "),a("p",[t._v("server: V2ray-core\nclient: v2rayN\nV2ray Linux客户端V2rayA")]),t._v(" "),a("h3",{attrs:{id:"官方-不推荐小白-需要自行配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#官方-不推荐小白-需要自行配置"}},[t._v("#")]),t._v(" 官方(不推荐小白，需要自行配置)：")]),t._v(" "),a("h4",{attrs:{id:"服务端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务端"}},[t._v("#")]),t._v(" 服务端")]),t._v(" "),a("p",[t._v("https://github.com/v2fly/fhs-install-v2ray")]),t._v(" "),a("p",[t._v("// 安裝和更新 V2Ray 安裝執行檔和 .dat 資料檔")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# bash <(curl -L https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh)\n\nOUTPUT:\nwarning: The following are the actual parameters for the v2ray service startup.\nwarning: Please make sure the configuration file path is correctly set.\n# /etc/systemd/system/v2ray.service\n[Unit]\nDescription=V2Ray Service\nDocumentation=https://www.v2fly.org/\nAfter=network.target nss-lookup.target\n\n[Service]\nUser=nobody\nCapabilityBoundingSet=CAP_NET_ADMIN CAP_NET_BIND_SERVICE\nAmbientCapabilities=CAP_NET_ADMIN CAP_NET_BIND_SERVICE\nNoNewPrivileges=true\nExecStart=/usr/local/bin/v2ray run -config /usr/local/etc/v2ray/config.json\nRestart=on-failure\nRestartPreventExitStatus=23\n\n[Install]\nWantedBy=multi-user.target\n\n# /etc/systemd/system/v2ray.service.d/10-donot_touch_single_conf.conf\n# In case you have a good reason to do so, duplicate this file in the same directory and make your customizes there.\n# Or all changes you made will be lost!  # Refer: https://www.freedesktop.org/software/systemd/man/systemd.unit.html\n[Service]\nExecStart=\nExecStart=/usr/local/bin/v2ray run -config /usr/local/etc/v2ray/config.json\n\ninstalled: /usr/local/bin/v2ray\ninstalled: /usr/local/share/v2ray/geoip.dat\ninstalled: /usr/local/share/v2ray/geosite.dat\ninstalled: /usr/local/etc/v2ray/config.json\ninstalled: /var/log/v2ray/\ninstalled: /var/log/v2ray/access.log\ninstalled: /var/log/v2ray/error.log\ninstalled: /etc/systemd/system/v2ray.service\ninstalled: /etc/systemd/system/v2ray@.service\nremoved: /tmp/tmp.lsnPmuFuXo\ninfo: V2Ray v5.3.0 is installed.\nYou may need to execute a command to remove dependent software: apt purge curl unzip\nPlease execute the command: systemctl enable v2ray; systemctl start v2ray\n\n")])])]),a("p",[t._v("//配置")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('sudo vim /usr/local/etc/v2ray/config.json\n\n{\n    "log":{\n        "loglevel":"warning"\n    },\n    "routing":{\n        "domainStrategy":"AsIs",\n        "rules":[\n            {\n                "type":"field",\n                "ip":[\n                    "geoip:private"\n                ],\n                "outboundTag":"block"\n            }\n        ]\n    },\n    "inbounds":[\n        {\n            "listen":"127.0.0.1",\n            "port":10000,\n            "protocol":"vmess",\n            "settings":{\n                "clients":[\n                    {\n                        "id":"<这里访问https://www.uuidgenerator.net/生成UUID替换>",\n                        "alterId":0\n                    }\n                ]\n            }\n        }\n    ],\n    "outbounds":[\n        {\n            "protocol":"freedom",\n            "tag":"direct"\n        },\n        {\n            "protocol":"blackhole",\n            "tag":"block"\n        }\n    ]\n}\n\n')])])]),a("p",[t._v("port：V2Ray 的 WebSocket 所监听的内网端口，取值范围是 1 ~ 65535，但为了避免端口占用，所以不能填常用的端口号（如 22 是 ssh 的端口号，80 是 HTTP 的端口号，443 是 HTTPS 的端口号等），此处设我为 10000\nid：用户的主 ID。可通过 UUID 生成器 - v2fly 或者 Online UUID Generator 生成（任选其中一个网站生成就行），此处我设为 9dfe7fee-d08f-44f8-ad2d-300d4c9c3a0e\nalterId：根据新 V2Ray 白话文指南 – VMess，推荐值为 0，代表启用 VMessAEAD")]),t._v(" "),a("p",[t._v("//启动")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("service v2ray start\n")])])]),a("p",[t._v("//开防火墙\nufw allow "),a("port",[t._v("\n// 安裝最新發行的 geoip.dat 和 geosite.dat 只更新 .dat 資料檔")])],1),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# bash <(curl -L https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-dat-release.sh)\n")])])]),a("p",[t._v("//移除 V2Ray")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# bash <(curl -L https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh) --remove\n")])])]),a("p",[t._v("---Discarded start:\n"),a("s",[t._v("https://www.v2ray.com/en/welcome/install.html")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("curl -Ls https://install.direct/go.sh | sudo bash\n\nThe script installs the following files.\n\n/usr/bin/v2ray/v2ray: V2Ray executable\n/usr/bin/v2ray/v2ctl: Utility\n/etc/v2ray/config.json: Config file\n/usr/bin/v2ray/geoip.dat: IP data file\n/usr/bin/v2ray/geosite.dat: domain data file\nThis script also configures V2Ray to run as service, if systemd is available.\n\nConfigurations are at the following places.\n\n/etc/systemd/system/v2ray.service: Systemd\n/etc/init.d/v2ray: SysV\nAfter installation, we will need to:\n\nUpdate /etc/v2ray/config.json file for your own scenario.\nRun service v2ray start command to start V2Ray.\nOptionally run service v2ray start|stop|status|reload|restart|force-reload to control V2Ray service.\n\n")])])]),a("p",[t._v("---Discarded END")]),t._v(" "),a("h4",{attrs:{id:"客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#客户端"}},[t._v("#")]),t._v(" 客户端：")]),t._v(" "),a("h5",{attrs:{id:"windows客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#windows客户端"}},[t._v("#")]),t._v(" Windows客户端")]),t._v(" "),a("p",[t._v("https://github.com/v2ray/V2RayN")]),t._v(" "),a("h5",{attrs:{id:"linux客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux客户端"}},[t._v("#")]),t._v(" linux客户端：")]),t._v(" "),a("p",[t._v("https://v2raya.org/docs/prologue/introduction/")]),t._v(" "),a("ol",[a("li",[t._v("安装 V2Ray 内核#\n可以直接安装V2RAY，不过还是推荐V2RayA的官方方法："),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("curl -Ls https://mirrors.v2raya.org/go.sh | sudo bash\n//安装后可以关掉服务，因为 v2rayA 不依赖于该 systemd 服务\nsudo systemctl disable v2ray --now\n")])])])]),t._v(" "),a("li",[t._v("安装 v2rayA"),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('wget -qO - https://apt.v2raya.org/key/public-key.asc | sudo tee /etc/apt/trusted.gpg.d/v2raya.asc\necho "deb https://apt.v2raya.org/ v2raya main" | sudo tee /etc/apt/sources.list.d/v2raya.list\nsudo apt update\nsudo apt install v2raya\n')])])])]),t._v(" "),a("li",[t._v("启动 v2rayA / 设置 v2rayA 自动启动"),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("sudo systemctl start v2raya.service\nsudo systemctl enable v2raya.service\n")])])])]),t._v(" "),a("li",[t._v("http://localhost:2017/")])]),t._v(" "),a("h5",{attrs:{id:"手机客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手机客户端"}},[t._v("#")]),t._v(" 手机客户端：")]),t._v(" "),a("p",[t._v("https://itlanyan.com/v2ray-clients-download/")]),t._v(" "),a("h3",{attrs:{id:"民间脚本-推荐小白-保姆式一步步即可"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#民间脚本-推荐小白-保姆式一步步即可"}},[t._v("#")]),t._v(" 民间脚本(推荐小白，保姆式一步步即可)：")]),t._v(" "),a("h4",{attrs:{id:"服务端-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务端-2"}},[t._v("#")]),t._v(" 服务端")]),t._v(" "),a("p",[t._v("https://github.com/githubvpn007/V2Ray")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("bash <(curl -s -L https://git.io/v2ray.sh)\n\n# v2ray bbr\n\nufw allow 端口号\nufw status\n\n")])])]),a("h4",{attrs:{id:"客户端-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#客户端-2"}},[t._v("#")]),t._v(" 客户端：")]),t._v(" "),a("p",[t._v("https://github.com/githubvpn007/v2rayNvpn")]),t._v(" "),a("p",[t._v("选择服务器=》选择对应的协议（V2RAY默认VMESS);\n添加后,在右下角托盘右键切换到pac模式;")]),t._v(" "),a("p",[t._v("https://www.xiaoglt.top/category/%e7%a7%91%e5%ad%a6%e4%b8%8a%e7%bd%91%e7%b3%bb%e5%88%97%e6%95%99%e7%a8%8b/v2ray%e6%95%99%e7%a8%8b/")]),t._v(" "),a("h2",{attrs:{id:"v2ray-config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v2ray-config"}},[t._v("#")]),t._v(" V2ray Config")]),t._v(" "),a("p",[t._v('v2ray  "protocol": "socks",\nhttps://umaint.github.io/2019/01/04/v2ray-ubuntu/')]),t._v(" "),a("p",[t._v("理解\nhttps://iitii.github.io/2020/02/04/1/")]),t._v(" "),a("p",[t._v("我们可以将 v2ray 看成一个带加密功能的 switch , 将 inbound 看成 LAN 口，将 outbound 看成 WAN 口。\n如果我们想正常上网，那么我们就得添加路由规则。也就是 routing 下面的 rule 。\nv2ray 接收来着 LAN口 的流量（也就是用户的流量），经过 rule 的匹配筛选后，转发给对应的 WAN口 ，从而实现正常上网。\n配置：\nrouting https://www.v2ray.com/en/configuration/routing.html\nhttps://www.v2ray.com/en/configuration/overview.html#inboundobject\nhttps://www.v2ray.com/en/configuration/protocols.html")]),t._v(" "),a("p",[t._v("案例学习：\nhttps://github.com/nondanee/UnblockNeteaseMusic/issues/148\nhttps://github.com/v2ray/v2ray-core/issues/663")]),t._v(" "),a("h2",{attrs:{id:"流量伪装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流量伪装"}},[t._v("#")]),t._v(" 流量伪装")]),t._v(" "),a("h3",{attrs:{id:"v2ray-web-websocket-tls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v2ray-web-websocket-tls"}},[t._v("#")]),t._v(" V2ray web+websocket+tls")]),t._v(" "),a("h4",{attrs:{id:"v2ray-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v2ray-配置"}},[t._v("#")]),t._v(" v2ray 配置")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('{\n    "log":{\n        "loglevel":"warning"\n    },\n    "routing":{\n        "domainStrategy":"AsIs",\n        "rules":[\n            {\n                "type":"field",\n                "ip":[\n                    "geoip:private"\n                ],\n                "outboundTag":"block"\n            }\n        ]\n    },\n    "inbounds":[\n        {\n            "listen":"127.0.0.1",\n            "port":10000,\n            "protocol":"vmess",\n            "settings":{\n                "clients":[\n                    {\n                        "id":"<这里访问https://www.uuidgenerator.net/生成UUID替换>",\n                        "alterId":0\n                   }\n                ]\n            },\n            "streamSettings":{\n                "network":"ws",\n                "wsSettings":{\n                    "path":"/lyhistory"\n                }\n            }\n        }\n    ],\n    "outbounds":[\n        {\n            "protocol":"freedom",\n            "tag":"direct"\n        },\n        {\n            "protocol":"blackhole",\n            "tag":"block"\n        }\n    ]\n}\n')])])]),a("h4",{attrs:{id:"nginx安装及http配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx安装及http配置"}},[t._v("#")]),t._v(" nginx安装及http配置")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("sudo apt install nginx\nsudo ufw allow 'Nginx Full'\n\nsudo rm /etc/nginx/sites-enabled/default\nsudo mkdir -p /var/www/html/mysite\nsudo chown -R $USER:$USER /var/www/html\nsudo chmod -R 755 /var/www/\nvim /var/www/html/mysite/index.html\n\n<html>\n    <head>\n        <title>Welcome</title>\n    </head>\n    <body>\n        <h1>Hello World!</h1>\n        <p>This is a sample page.</p>\n    </body>\n</html>\n\n\nsudo vim /etc/nginx/sites-available/mysite\nserver {\n        listen 80;\n        listen [::]:80;\n\n        root /var/www/html/mysite;\n        index index.html index.htm index.nginx-debian.html;\n\n        server_name lyhistory.com www.lyhistory.com;\n\n        location / {\n                try_files $uri $uri/ =404;\n        }\n}\n\nsudo ln -s /etc/nginx/sites-available/mysite /etc/nginx/sites-enabled/\n\n为了防止可能出现的内存问题，\nsudo vim /etc/nginx/nginx.conf\nhttp {\n    ...\n    server_names_hash_bucket_size 64;\n    ...\n}\n\nnginx -s reload\n\nufw allow 'Nginx Full'\n")])])]),a("h4",{attrs:{id:"cloudflare保护"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cloudflare保护"}},[t._v("#")]),t._v(" cloudflare保护")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Cloudflare’s Origin CA生成：\ncloudflare管理页面=>SSL/TLS=>Origin Server 点击生成证书；\n保存证书至 /etc/ssl/cloudflare_cert.pem, 保存key至 /etc/ssl/cloudflare_key.pem")])]),t._v(" "),a("li",[a("p",[t._v("SSL/TLS 加密模式改为 Full (strict)")])]),t._v(" "),a("li",[a("p",[t._v("Edge Certificates=>Minimum TLS Version」改为「TLS 1.2」")])]),t._v(" "),a("li",[a("p",[t._v("Enable authenticated origin pulls\n确保 Nginx 只接受来自 Cloudflare 服务器的请求，防止任何其他人直接连接到 Nginx 服务器,\ncloudflare管理页面=>SSL/TLS=>Origin Server,打开「Authenticated Origin Pulls」 。")]),t._v(" "),a("p",[t._v("然后"),a("a",{attrs:{href:"https://developers.cloudflare.com/ssl/origin-configuration/authenticated-origin-pull/set-up/zone-level/",target:"_blank",rel:"noopener noreferrer"}},[t._v("访问该页面"),a("OutboundLink")],1),t._v(",可以找到下载client证书链接:\n"),a("a",{attrs:{href:"https://developers.cloudflare.com/ssl/static/authenticated_origin_pull_ca.pem",target:"_blank",rel:"noopener noreferrer"}},[t._v("download authenticated_origin_pull_ca.pem"),a("OutboundLink")],1),t._v("\n将证书 authenticated_origin_pull_ca.pem 的内容写入到服务器的 /etc/ssl/cloudflare_client.crt 中")])])]),t._v(" "),a("h4",{attrs:{id:"nginx配置ssl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx配置ssl"}},[t._v("#")]),t._v(" nginx配置ssl")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('sudo vim /etc/nginx/sites-available/mysite\n\nserver {\n  listen 80 default_server;\n  listen [::]:80 default_server;\n\n  server_name lyhistory.com www.lyhistory.com;\n\n  return 301 https://$host$request_uri;\n}\n\nserver {\n  listen 443 ssl http2;\n  listen [::]:443 ssl http2;\n\n  ssl_certificate /etc/ssl/cloudflare_cert.pem;\n  ssl_certificate_key /etc/ssl/cloudflare_key.pem;\n  ssl_client_certificate /etc/ssl/cloudflare_client.crt;\n  ssl_verify_client on;\n  ssl_session_timeout 1d;\n  ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions\n  ssl_session_tickets off;\n\n  # intermediate configuration\n  ssl_protocols TLSv1.2 TLSv1.3;\n  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;\n  ssl_prefer_server_ciphers off;\n\n  # HSTS (ngx_http_headers_module is required) (63072000 seconds)\n  add_header Strict-Transport-Security "max-age=63072000" always;\n\n  server_name lyhistory.com www.lyhistory.com;\n\n  root /var/www/html/mysite;\n  index index.html index.htm index.nginx-debian.html;\n\n\n  location / {\n    try_files $uri $uri/ =404;\n  }\n\n  location /lyhistory {\n    if ($http_upgrade != "websocket") {\n      return 404;\n    }\n    proxy_redirect off;\n    proxy_pass http://127.0.0.1:10000;\n    proxy_http_version 1.1;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection "upgrade";\n    proxy_set_header Host $host;\n\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n  }\n}\n\n')])])]),a("p",[t._v("nginx -s reload")]),t._v(" "),a("h4",{attrs:{id:"v2ray-client配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v2ray-client配置"}},[t._v("#")]),t._v(" V2ray client配置")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("地址（address）：可以填写您注册的域名（也可以是 Cloudflare 的 CDN IP）\n端口（port）：HTTPS 端口号，即填写 443\n用户 ID（id）：与 V2Ray 服务端的配置一致，也就是之前生成的 UUID\n额外 ID（alterId）：与 V2Ray 服务端的配置一致，即 0\n加密方式（security）：自动，即 auto\n传输协议（network）：WebSocket，即 ws\n伪装类型（type）：none\n伪装域名（host）：填写您注册的域名\n路径（path）：与 V2Ray 服务端的配置一致，即 /lyhistory\n底层传输安全（tls）：tls\n跳过证书验证（allowInsecure）：false 。\n")])])]),a("p",[t._v("refer:\n"),a("a",{attrs:{href:"https://ericclose.github.io/V2Ray-TLS-WebSocket-Nginx-with-Cloudflare.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("V2Ray (WebSocket + TLS + Web + Cloudflare) 手动配置详细说明"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("https://www.xiaoglt.top/v2ray%e9%ab%98%e7%ba%a7%e6%8a%80%e5%b7%a7%ef%bc%9a%e6%b5%81%e9%87%8f%e4%bc%aa%e8%a3%85/")]),t._v(" "),a("p",[t._v("https://blog.cascade.moe/posts/nginx-proxy-v2ray-ws/")]),t._v(" "),a("h3",{attrs:{id:"v2ray-web-http2-tls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v2ray-web-http2-tls"}},[t._v("#")]),t._v(" V2ray web+http2+tls")]),t._v(" "),a("p",[t._v("理论上http2省去了upgrade的请求，性能更好。但实际使用中两者没有明显区别，加之某些web服务器（例如Nginx）不支持后端服务器为http2，所以websocket的方式更流行。如果你要上http2，记得web服务器不能用Nginx，要用支持反代http2的Caddy等软件。")]),t._v(" "),a("p",[t._v("V2ray HTTP/2+TLS+WEB 一键部署\nhttps://iitii.github.io/2022/03/02/1")])])}),[],!1,null,null,null);e.default=s.exports}}]);