(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{511:function(t,e,a){"use strict";a.r(e);var n=a(65),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"市场"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#市场"}},[t._v("#")]),t._v(" 市场")]),t._v(" "),a("ul",[a("li",[t._v("Atomicals\nhttps://twitter.com/atomicalsxyz\nhttps://docs.atomicals.xyz/\nhttps://github.com/atomicals/atomicals-js")]),t._v(" "),a("li",[t._v("Wizz Wallet（前 ATOM Wallet）钱包；https://wizzwallet.io")]),t._v(" "),a("li",[t._v("铸造代打平台；https://satsx.io\nhttps://mirror.xyz/0x69c45F2ef4B15548451A01640bDBB3ED7B613E43/uP24w4QLVm6vOGRVKHRtVLvvg3M-tbJ-vjQ56Gp7678")]),t._v(" "),a("li",[t._v("官方域名查询；https://realm.name/punk")]),t._v(" "),a("li",[t._v("ATOM 铭文浏览器；https://atomicalmarket.com/atomical/0")]),t._v(" "),a("li",[t._v("fees\nhttps://mempool.space/")])]),t._v(" "),a("p",[t._v("三大市场：\nhttps://atomicalmarket.com\nhttps://satsx.io\nhttps://satsx.io/wallet/atomicals\nhttps://bitatom.io")]),t._v(" "),a("h2",{attrs:{id:"arc-protocol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arc-protocol"}},[t._v("#")]),t._v(" arc protocol")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Text")]),t._v(" "),a("th",[t._v("Atomicals")]),t._v(" "),a("th",[t._v("Ordinals")]),t._v(" "),a("th",[t._v("Ethereum ERC721")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Value Proposition")]),t._v(" "),a("td",[t._v("Digital Objects")]),t._v(" "),a("td",[t._v("Digital Artifacts")]),t._v(" "),a("td",[t._v("Digital Collectibles")])]),t._v(" "),a("tr",[a("td",[t._v("Blockchains")]),t._v(" "),a("td",[t._v("Bitcoin and all UTXO blockchains")]),t._v(" "),a("td",[t._v("Bitcoin and all UTXO blockchains")]),t._v(" "),a("td",[t._v("Ethereum EVM compatible blockchains")])]),t._v(" "),a("tr",[a("td",[t._v("Mint Technique")]),t._v(" "),a("td",[t._v('Bitcoin: Commit & reveal w/ "atom" envelope.')]),t._v(" "),a("td",[t._v('Bitcoin: Commit & reveal w/ "ord" envelope.')]),t._v(" "),a("td",[t._v("Fund and deploy contract account")])]),t._v(" "),a("tr",[a("td",[t._v("Data Storage")]),t._v(" "),a("td",[t._v("Store one or multiple files upon minting")]),t._v(" "),a("td",[t._v("Store only one file upon minting")]),t._v(" "),a("td",[t._v("Not defined")])]),t._v(" "),a("tr",[a("td",[t._v("Dynamic State")]),t._v(" "),a("td",[t._v("Define and update app state for basic and any complex file types")]),t._v(" "),a("td",[t._v("Not defined - can be defined on app specific basis")]),t._v(" "),a("td",[t._v("Not defined - can be programmed up front")])]),t._v(" "),a("tr",[a("td",[t._v("Validation")]),t._v(" "),a("td",[t._v('Validation currently through the indexing service "electrumx" - in theory it\'s possible to validate 100% client-side.')]),t._v(" "),a("td",[t._v('Validation currently through the indexing service "ord" - in theory it\'s possible to validate 100% client-side.')]),t._v(" "),a("td",[t._v("Trusts Ethereum  EVM nodes or in practice trust Metamask or Infura")])]),t._v(" "),a("tr",[a("td",[t._v("Indexing")]),t._v(" "),a("td",[t._v("Validation relies on elecrumx atomicals indexer (Python) at the moment for tracking ordinal numbering system.")]),t._v(" "),a("td",[t._v("Validation relies on ord indexer (Rust) at the moment for tracking ordinal numbering system.")]),t._v(" "),a("td",[t._v("Uses native Ethereum EVM nodes or in practice trust Metamask or Infura")])]),t._v(" "),a("tr",[a("td",[t._v("Address Format")]),t._v(" "),a("td",[t._v("P2TR (Taproot) addresses required for mint and updates.")]),t._v(" "),a("td",[t._v("P2TR (Taproot) addresses are required for all uses such as mint and transfers")]),t._v(" "),a("td",[t._v("Uses native Ethereum Account address.")])]),t._v(" "),a("tr",[a("td",[t._v("Collections")]),t._v(" "),a("td",[t._v('First-class "Container" NFT for updating collections, sealable permanently.')]),t._v(" "),a("td",[t._v("Not defined but is in progress with parent-child relationships")]),t._v(" "),a("td",[t._v("Defined as separate ERC")])]),t._v(" "),a("tr",[a("td",[t._v("Atomics Swaps")]),t._v(" "),a("td",[t._v("Partially Signed Bitcoin Transactions (PBSTs)")]),t._v(" "),a("td",[t._v("Partially Signed Bitcoin Transactions (PBSTs)")]),t._v(" "),a("td",[t._v("Defined as separate ERC")])]),t._v(" "),a("tr",[a("td",[t._v("Fungible Tokens")]),t._v(" "),a("td",[t._v('First-class "ARC20" using Satoshis as unit of account. Decentralized and direct minting modes available. Built-in ticker name service')]),t._v(" "),a("td",[t._v('Not provided in base protocol. "BRC20" creates a JSON protocol in an Inscription to define the decentralized mint rules and ticker name.')]),t._v(" "),a("td",[t._v("Defined as ERC20 type tokens")])]),t._v(" "),a("tr",[a("td",[t._v("Name Service")]),t._v(" "),a("td",[t._v('Realms are first-class NFTs that represent domain names and digital identities. A new naming standard with no domain suffix, starts with plus "+" sign like +username')]),t._v(" "),a("td",[t._v('Not provided in base protocol. ".names" and ".sats" protocols exist as JSON protocol in an Inscription to define the claim and update rules.')]),t._v(" "),a("td",[t._v("Existing services such as ENS and Unstoppable Domains")])])])]),t._v(" "),a("h2",{attrs:{id:"arc20-挖矿"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arc20-挖矿"}},[t._v("#")]),t._v(" ARC20 挖矿")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# Download the github repo:\ngit clone https://github.com/atomicals/atomicals-js.git\n\ncd atomicals-js\n\n# Build:\n# If you don't have yarn & node installed\n# npm install -g node\n# npm install -g yarn\n\nyarn install\nyarn run build\n\n#See all commands at:\n\nyarn run cli --help\n\n\n创建钱包并修改为自己的地址\n执行命令：yarn cli wallet-init\n成功执行后会新建一个wallets文件夹，文件夹下有一个 wallet.json 文件，编辑文件，\n基本上都要修改，\nphrase是收币钱包助记词，primary下是收币的钱包信息，funding下是付gas钱包信息，我用的都是同一个钱包\n\n开始挖矿： 执行 yarn cli mint-dft quark --satsbyte=100\n100是gas费，\n当前链上手续https://mempool.space/zh/ \n\nhttps://bitatom.io/token/quark\n")])])]),a("p",[t._v("自动脚本")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('ARC20 QUARK MINT\n1. 固定gas,循环执行。适合追求简单快捷的同学。\n#!/bin/bash\nwhile true; do\n\tyarn cli mint-dft quark --satsbyte=$fee\ndone\n\n保存以上代码到loop.sh,放在atomicals-js文件夹下,然后执行。Windows需要安装git bash环境。\n2. 智能gas,循环执行。适合有一定基础的同学。\nimport requests\ndef get_bitcoin_gas_fee():\n\t# URL to get the latest Bitcoin fees information\n\turl = "https://mempool.space/api/v1/fees/recommended"\n\ttry:\n\t\tresponse = requests.get(url)\n\t\t# Check if the request was successful\n\t\tif response.status_code == 200:\n\t\t\tfees_data=response.json()\n\t\t\thour_fee=fees_data.get(\'hourFee\', 90)\n\t\t\tprint (fees_data)\n\t\t\treturn hour_fee\n\t\telse:\n\t\t\treturn "Error: Unable to fetch fees data. Status code: + str(response.status_code)\n\texcept Exception as e:\n\t\treturn 90\nif __name__ == \'__main__\':\n\t# Get the current Bitcoin gas fee\n\tcurrent_bitcoin_gas_fee = get_bitcoin_gas_fee()\n\tprint(current_bitcoin_gas_fee)\nPart-1: 保存以上代码到gas.py,放置于atomicals-js文件夹下。运行pip3 install requests安装依赖。该 python脚本会请求实时的gas。\n#!/bin/bash\nwhile true; do\n\t# Run the Python script and capture the output fee=$(python3 gas.py)\n\tif [[ $fee -lt 100 ]]; then\n\t\techo "Fee is $fee. Let\'s go!"\n\t\t# Run your npm script with the fee\n\t\tyarn cli mint-dft quark --satsbyte=$fee\n\telse\n\t\techo "Fee is $fee, too high. Let\'s wait." \n\t\tsleep 300\n\tfi\ndone\n\nPart-2: 保存以上代码到loop.sh,放置于atomicals-js文件夹下。该脚本会在gas小于100时,找一个合适 的gas值运行mint命令。Windows执行需要git bash环境,也需要安装python3。\n')])])]),a("h2",{attrs:{id:"realm-names"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#realm-names"}},[t._v("#")]),t._v(" Realm Names")]),t._v(" "),a("p",[t._v("Realm Names are human-readable identifiers which can be used to associate network addresses and resource information. A Realm name begins with the plus + sign and has at least one alphabetical character, such as +alice and +agent007 which are both valid names (top-level-realms or TLRs) in the Realm Name System (RNS). Realm names are self-owned and self-managed directly on the Bitcoin blockchain using the Atomicals Digital Object format — which basically means that there is no middle man or centralized registrar. Once you claim a name, it's yours forever or until you transfer it to someone else.")]),t._v(" "),a("p",[t._v("https://docs.atomicals.xyz/realm-names")]),t._v(" "),a("p",[t._v("You can query and search Realm names on https://realm.name")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('git clone https://github.com/atomicals/atomicals-js.git\ncd atomicals-js\nnpm install\nnpm run build\nnpm run cli wallet-init\nnpm run cli wallets\nnpm run cli mint-realm "myrealmname"\n\n#Query Realm name\nnpm run cli get +myrealmname\n\n#You can query the global feed of registered Realms and Atomicals\nnpm run cli list\n\n')])])]),a("h2",{attrs:{id:"troubleshooting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting"}},[t._v("#")]),t._v(" Troubleshooting")]),t._v(" "),a("h3",{attrs:{id:"q-a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#q-a"}},[t._v("#")]),t._v(" Q&A")]),t._v(" "),a("p",[t._v("1.为什么ARC20资产会燃烧?\nARC20作为BTC上的铭文,它的本质与普通BTC别无二致,只是这些聪带有了特殊的ARC20标记, 从而在索引里会被识别为铭文。\n因此当ARC20资产和普通BTC混合在一起的时候,有一定几率,ARC20的铭文会被作为普通的BTC 花出去。这种铭文被不小心损耗的现象,叫做铭文燃烧。")]),t._v(" "),a("p",[t._v("2.如何避免ARC20资产被燃烧?\na. 必须使用可以识别ARC20资产的钱包,如Wizz, Unisat。\nb. 推荐ARC20铭文与普通BTC资产分开存放。\nc. 如果要从钱包包含ARC20铭文的钱包中转出资产/BTC,请确保钱包里有足够的gas (去掉ARC20 资产意外的非铭文BTC)。\nd. 如果要从刚刚交易过的,包含ARC20的钱包中转出资产/BTC,请等待ARC20的索引确认。什么 叫等待索引确认?就是钱包里你可以能看到正确的ARC20数量。比如刚买了10张夸克,一定要等 你确认看到了这10张夸克,再去操作你的钱包。")]),t._v(" "),a("p",[t._v("3.夸克之战之后,我现在手里有多个Atomicals的funding钱包,里面的钱能转出来吗?\n可以。把funding钱包的私钥导入普通的BTC钱包,把钱转出来。私钥就是Atomicals-js文件夹下面 wallets/wallet.json中Funding对应的WIF。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("我手里的Primary钱包里有打废的铭文,可以转出来吗?\n可以。把Primary钱包的私钥导入普通的BTC钱包,把钱转出来。私钥就是Atomicals-js文件夹下面 wallets/wallet.json中Primary对应的WIF。")])]),t._v(" "),a("li",[a("p",[t._v("Atomicals-js文件夹下的wallets/wallet.json如何理解?\nO\nwallet.json的初始结构是一组你的钱包,它由一组助记词+Primary钱包+Funding钱包组\n成。\nO\n三者是绑定关系,因为由助记词是可以间接推算得到这两个钱包的。\no\n可以整体转移wallet.json中的内容,但是修改其中一部分是不行的。\nO 任意修改其中一个钱包,程序是会报错的,因为程序会校验它们的关系。")])]),t._v(" "),a("li",[a("p",[t._v("夸克之战之后,我有多组钱包,我怎么能再接下来的mint中使用它们?\n请研究一下 yarn cli wallet import <钱包WIF> <钱包名称> 这个命令,它可以导入别的钱\n包,这个钱包可以用来支付gas fee,也可以用来接收铭文。你可以导入多个钱包。")])]),t._v(" "),a("li",[a("p",[t._v("我如何用当前这个funding钱包出gas,铭文打进我的另一个归集铭文的钱包(非当前Primary 钱包)?\n首先把你的另一个钱包根据6中的命令导入,然后在未来mint铭文的过程中尝试以下命令:\nyarn cli mint-dft dragon --satsbyte 60 --initialowner <导入钱包名称>")])]),t._v(" "),a("li",[a("p",[t._v("我如何用我的另一个funding钱包中的钱付gas,铭文打进当前的Primary钱包?\n首先把你的另一个钱包根据6中的命令导入,然后在未来mint铭文的过程中尝试以下命令: yarn cli mint-dft dragon --satsbyte 60 --funding <导入钱包名称>")])])]),t._v(" "),a("p",[t._v('9.为什么我的钱包里明明有余额,却无法继续打铭文了? Atomicals-js提醒我余额不足。 你的钱包里有余额,但是没有单笔utxo的余额满足当前铭文的需求。你需要归集小额utxo,推荐阅 读:BTC"废“铭文价值回收 & OKX & Sparrow使用技巧\n。')]),t._v(" "),a("h3",{attrs:{id:"syntaxerror-yarn-metadata-json-unexpected-token-is-not-valid-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntaxerror-yarn-metadata-json-unexpected-token-is-not-valid-json"}},[t._v("#")]),t._v(" SyntaxError....yarn-metadata.json Unexpected token '', is not valid json")]),t._v(" "),a("p",[t._v("yarn cache clean")]),t._v(" "),a("h3",{attrs:{id:"_500-error"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_500-error"}},[t._v("#")]),t._v(" 500 error")]),t._v(" "),a("p",[t._v("open .env and replace\nhttps://ep.atomicals.xyz/proxy\nto\nhttps://ep.atomicalmarket.com/proxy")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://docs.atomicals.xyz/reference-and-tools/electrumx-api-and-public-endpoints",target:"_blank",rel:"noopener noreferrer"}},[t._v("ElectrumX API and Public Endpoints"),a("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);