(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{258:function(e,t,s){"use strict";s.r(t);var a=s(0),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("web3踩坑记录")]),e._v(" "),s("p",[e._v("原因是我前端采用web3js1.2.7进行签名，然后后端采用web3j 3.6.0进行recover，但是奇怪的是localhost用ganche provider测试正常，\n但是换到ropsten以及product都无法recover，所以追查如下：")]),e._v(" "),s("p",[e._v("什么是web3")]),e._v(" "),s("p",[e._v("web3j：\nhttps://github.com/web3j/web3j")]),e._v(" "),s("h2",{attrs:{id:"recover的方式："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#recover的方式："}},[e._v("#")]),e._v(" recover的方式：")]),e._v(" "),s("p",[e._v("recoverFromSignature\nsignedMessageToKey\ntestRecoverAddressFromSignature： https://github.com/web3j/web3j/blob/master/crypto/src/test/java/org/web3j/crypto/ECRecoverTest.java\nhttps://github.com/web3j/web3j/issues/222\nhttps://gist.github.com/megamattron/94c05789e5ff410296e74dad3b528613\nhttps://github.com/AlphaWallet/alpha-wallet-android/blob/0ab199eca18aed4d4408d63c6a4de64e3cb55ca3/app/src/main/java/com/alphawallet/app/entity/CryptoFunctions.java\ntestRecoverAddressFromSignature：\nhttps://github.com/AlphaWallet/alpha-wallet-android/blob/0ab199eca18aed4d4408d63c6a4de64e3cb55ca3/app/src/main/java/com/alphawallet/app/ui/DappBrowserFragment.java")]),e._v(" "),s("h2",{attrs:{id:"signatures-differ-in-web3j-and-web3js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#signatures-differ-in-web3j-and-web3js"}},[e._v("#")]),e._v(" Signatures differ in web3J and web3js")]),e._v(" "),s("h3",{attrs:{id:"prefix问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prefix问题"}},[e._v("#")]),e._v(" prefix问题")]),e._v(" "),s("p",[e._v("https://github.com/web3j/web3j/issues/208\nhttps://github.com/web3j/web3j/issues/476\nhttps://github.com/web3j/web3j/pull/424\nhttps://github.com/gjeanmart/web3j/blob/2cce022e1bc30704ed7bac6241315f9b882f4f04/crypto/src/test/java/org/web3j/crypto/ECRecoverTest.java\n这个主要是说web3js加了prefix的事情\n实际上web3j的高版本，我测试的是4.1以上的版本提供了带prefix的签名方法Sign.signPrefixedMessage，但是recover没有提供自动的prefix，还是需要手动！")]),e._v(" "),s("h3",{attrs:{id:"double-hash问题："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#double-hash问题："}},[e._v("#")]),e._v(" double hash问题：")]),e._v(" "),s("p",[e._v("原因：由于web3j默认的签名(Sign.signMessage)和recover(Sign.signedMessageToKey) internally hash(sha3) the input messageBytes before signing and on verification\nhttps://ethereum.stackexchange.com/questions/17708/solidity-ecrecover-and-web3j-sign-signmessage-are-not-compatible-is-it\n两种做法：\n1.传入Sign.signedMessageToKey的时候不要进行sha3 hash\n2.自定义recover方法signedMessageToKey，内部不要进行hash\n这是网友实现的去掉hash版本\nhttps://gist.github.com/xoriole/4c2a9630dba5a20ee28fb58edf193375")]),e._v(" "),s("p",[e._v("然后对于签名内部hash这个问题，web3j提供的新的signMessage方法提供了参数needhash来区分，但是recover的signedMessageToKey貌似没有提供额外参数!")]),e._v(" "),s("h3",{attrs:{id:"最终解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最终解决"}},[e._v("#")]),e._v(" 最终解决")]),e._v(" "),s("p",[e._v("尝试debugger web3js，由于文件太大，chrome卡死，放弃")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('var e = m.isHexStrict(t) ? m.hexToBytes(t) : t,\nr = h.from(e),\nn = "Ethereum Signed Message:\\n" + e.length,\ni = h.from(n),\no = h.concat([i, r]);\n')])])]),s("p",[e._v("莫非这个webjs通过givenprovider比如metamask签名用了其他的信息？比如chainid，毕竟我本地测试没问题，一换成测试网就有问题，\n搜索web3.eth.sign chainid metamask，并没有发现什么")]),e._v(" "),s("p",[e._v("想着换一个特定的provider不用given provider，比如infura，但是\n文档里面这个只支持nodejs版本的！不支持前端js版本\nhttps://infura.io/docs/ethereum/wss/introduction.md")]),e._v(" "),s("p",[e._v("然后想都tm升级到最新版本吧！\nweb3j core，maven：https://mvnrepository.com/artifact/org.web3j/core\n结果还是一样问题，说明跟版本无关，并且还出现了由于我的智能合约solidity版本过低，导致调用出错，暂时又回退回去")]),e._v(" "),s("p",[e._v("最终解决！\n发现 https://ethereum.stackexchange.com/questions/54715/metamask-verification-on-a-server-with-web3-personal-sign")]),e._v(" "),s("p",[e._v('web3.eth.personal.sign(dataToSign, address, password [, callback])\nsign(keccak256("\\x19Ethereum Signed Message:\\n" + dataToSign.length + dataToSign)))\nhttps://web3js.readthedocs.io/en/v1.2.7/web3-eth-personal.html')]),e._v(" "),s("p",[e._v('但是我查了下文档，都是\n"\\x19Ethereum Signed Message:\\n" + message.length + message.')]),e._v(" "),s("p",[e._v("What is the difference between web3.eth.sign, web3.eth.accounts.sign, web3.eth.personal.sign functions?\nhttps://ethereum.stackexchange.com/questions/25601/what-is-the-difference-between-web3-eth-sign-web3-eth-accounts-sign-web3-eth-p\nWeb3.js : eth.sign() vs eth.accounts.sign() — producing different signatures?\nhttps://ethereum.stackexchange.com/questions/35425/web3-js-eth-sign-vs-eth-accounts-sign-producing-different-signatures\nLikely web3.eth.accounts sign method is encoding the chainId as the parameter V while web3.eth.sign (an older implementation) is not. This was an update wrt to EIP 155. More info: (https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md)")]),e._v(" "),s("p",[e._v("也没有发现什么相关的区别，所以还是不知道具体发生了啥，但是总之web3.eth.personal.sign是可以工作的")]),e._v(" "),s("p",[e._v("难道是因为参数顺序？\nweb3.eth.sign(address, dataToSign, [, callback])\nhttps://github.com/ethereum/wiki/wiki/JavaScript-API#web3ethsign")]),e._v(" "),s("h2",{attrs:{id:"其他问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他问题"}},[e._v("#")]),e._v(" 其他问题")]),e._v(" "),s("p",[e._v("metamask有时候没反应！websocket问题！\nhttps://github.com/MetaMask/metamask-extension/issues/5425")]),e._v(" "),s("p",[e._v("provider问题\nmetamask有时候没响应！")]),e._v(" "),s("p",[e._v("版本问题\nweb3-cli web3j的版本跟solidity版本如果不一致会发生调用不成功的问题!")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("refer:")]),e._v(" "),s("p",[e._v("SignTest\nhttps://github.com/web3j/web3j/blob/master/crypto/src/test/java/org/web3j/crypto/SignTest.java")])])}),[],!1,null,null,null);t.default=n.exports}}]);