(window.webpackJsonp=window.webpackJsonp||[]).push([[354],{781:function(e,t,r){"use strict";r.r(t);var n=r(65),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[r("a",{attrs:{href:"/docs/software"}},[e._v("回目录")]),e._v("  《jmeter4.0 Load test》")]),e._v(" "),r("h2",{attrs:{id:"_1-basics-concept"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-basics-concept"}},[e._v("#")]),e._v(" 1. Basics Concept")]),e._v(" "),r("h3",{attrs:{id:"_1-1-measurements-metrics"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-measurements-metrics"}},[e._v("#")]),e._v(" 1.1 Measurements / metrics")]),e._v(" "),r("p",[e._v("Load:\nRequest per second\nActive users\nThroughput\nPerformance:\npercentile for Successful requests / success rate/ error rate\nMax/Min/Avg response time\nKey metrics for PostgreSQL monitoring https://www.datadoghq.com/blog/postgresql-monitoring/")]),e._v(" "),r("h3",{attrs:{id:"_1-2-test-plan"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-test-plan"}},[e._v("#")]),e._v(" 1.2 Test Plan")]),e._v(" "),r("p",[e._v("https://jmeter.apache.org/usermanual/index.html\nhttps://jmeter.apache.org/usermanual/test_plan.html")]),e._v(" "),r("p",[r("strong",[e._v("Test Plan object")]),e._v("\nFunctional Testing")]),e._v(" "),r("p",[r("strong",[e._v("Thread Group")]),e._v("\nSet the number of threads\nSet the ramp-up period\nSet the number of times to execute the test")]),e._v(" "),r("p",[r("strong",[e._v("Controllers")]),e._v("\nSamplers\nhttps://jmeter.apache.org/usermanual/component_reference.html#samplers\nLogical Controllers\nTest Fragments")]),e._v(" "),r("p",[r("strong",[e._v("Listeners")]),e._v("\nhttps://jmeter.apache.org/usermanual/component_reference.html#listeners")]),e._v(" "),r("p",[e._v("View Results Tree Listener\nGraph Results Listener\nhttps://jmeter.apache.org/usermanual/component_reference.html#Graph_Results")]),e._v(" "),r("p",[r("strong",[e._v("Timers")]),e._v(" "),r("strong",[e._v("Assertions")]),e._v(" "),r("strong",[e._v("Configuration Elements")]),e._v("\nworks closely with a Sampler")]),e._v(" "),r("p",[r("strong",[e._v("Pre-Processor Elements")]),e._v(" "),r("strong",[e._v("Post-Processor Elements")]),e._v(" "),r("strong",[e._v("Execution Order")]),e._v(" "),r("strong",[e._v("Scoping Rules")]),e._v(" "),r("strong",[e._v("Properties and Variables")]),e._v(" "),r("strong",[e._v("Using Variables to parameterise tests")])]),e._v(" "),r("h2",{attrs:{id:"_2-hands-on"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-hands-on"}},[e._v("#")]),e._v(" 2 Hands on")]),e._v(" "),r("h3",{attrs:{id:"_2-1-setup"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-setup"}},[e._v("#")]),e._v(" 2.1 Setup")]),e._v(" "),r("p",[e._v("Download:http://jmeter.apache.org/download_jmeter.cgi")]),e._v(" "),r("p",[e._v("/opt/loadtest\nsudo chown "),r("username",[e._v(":"),r("groupname",[e._v(" loadtest -R\nsudo wget http://www-eu.apache.org/dist//jmeter/binaries/apache-jmeter-4.0.tgz\nsudo tar -xvzf apache-jmeter-4.0.tgz\nTestplan put in /opt/loadtest/testplan/")])],1)],1),e._v(" "),r("p",[r("strong",[e._v("GUI Mode")])]),e._v(" "),r("p",[e._v("Windows:\ncd \\apache-jmeter-4.0\\bin\njmeter\nLinux\n/opt/loadtest/apache-jmeter-4.0/bin/jmeter.sh &")]),e._v(" "),r("p",[r("strong",[e._v("Non GUI Mode")])]),e._v(" "),r("p",[e._v("jmeter -n -t testplan.jmx -l log.jtl -e -o resultReport\n-n specifies JMeter is to run in non-gui mode\n../apache-jmeter-4.0/bin/jmeter -n -t Pgsql_Stg_TestPlan.jmx -l log.jtl -e -o resultReport")]),e._v(" "),r("p",[r("strong",[e._v("Server Mode (distributed testing)")])]),e._v(" "),r("p",[e._v("For distributed testing, run JMeter in server mode on the remote node(s), and then control the server(s) from the GUI. You can also use non-GUI mode to run remote tests. To start the server(s), run jmeter-server[.bat] on each server host.\nhttps://jmeter.apache.org/usermanual/jmeter_distributed_testing_step_by_step.html")]),e._v(" "),r("h3",{attrs:{id:"_2-2-database-test-plan"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-database-test-plan"}},[e._v("#")]),e._v(" 2.2 DataBase Test Plan")]),e._v(" "),r("p",[r("strong",[e._v("Refer")]),e._v("\nhttp://jmeter.apache.org/usermanual/build-db-test-plan.html\nhttps://stackoverflow.com/questions/25525089/how-to-do-performance-test-for-a-stored-procedure-via-jmeter-2-9\nhttps://hiromia.blogspot.sg/2015/03/how-to-perform-load-testing-on.html\nhttps://jdbc.postgresql.org/documentation/80/callproc.html")]),e._v(" "),r("p",[r("strong",[e._v("Samples")]),e._v("\nSQL query performance test with JMeter\nhttp://scornik.blogspot.com/2011/05/sql-query-performance-test-with-jmeter.html\nhttp://nonfunctionaltestingtools.blogspot.com/2015/10/database-test-plan-with-jmeter.html\nhttps://stackoverflow.com/questions/45312779/readable-output-from-oracle-procedure-that-returns-a-cursor-in-jmeter")]),e._v(" "),r("p",[e._v("There are two ways to create a database test plan, use build-in template  “JDBC Load Test”\nOr follow the manually instruction below:")]),e._v(" "),r("ol",[r("li",[e._v("Add JDBC driver to /lib")])]),e._v(" "),r("p",[e._v("Postgresql jdbc driver 42.2.5:\nhttps://jdbc.postgresql.org/download.html")]),e._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[r("p",[e._v("Adding Users (Thread Group)")])]),e._v(" "),r("li",[r("p",[e._v("Adding jdbc config & request & variables")])])]),e._v(" "),r("p",[e._v("Query request:\nselect count(1) from table t1 inner join user t2 on t1.userid=t2.userid where t2.col2=? order by col3")]),e._v(" "),r("p",[e._v("postgresql:\n{?= call sproc(?)}\nOUT,${input1}\nOUT REF_CURSOR,VARCHAR")]),e._v(" "),r("p",[e._v("Oracle:\ncall sproc(?,?)\n${input1},OUT\nVARCHAR,OUT -10")]),e._v(" "),r("p",[e._v("If there is any variables, the Query type cannot select “Select Statement”, it should be “Callable Statement” !")]),e._v(" "),r("ol",{attrs:{start:"4"}},[r("li",[e._v("Adding Listener to View/Store the Test Results\ni) Summary Report and View Result Tree\nhttps://jmeter.apache.org/usermanual/component_reference.html#Summary_Report")])]),e._v(" "),r("p",[r("img",{attrs:{src:"/docs/docs_image/software/jmeter/jmeter01.png",alt:""}})]),e._v(" "),r("p",[e._v("ii) RealTime with Grafana\nhttps://jmeter.apache.org/usermanual/realtime-results.html\nMethod 1: write to fluxdb by graphitePort 2003\nStep 1: create influxdb jmeter and config influxdb.conf\nBased on <</workspace/setup:Grafana>>,\nsudo docker run -d -p 8080:8080 -p 8086:8086 -p 9001:9001 -p 3001:3000 -p 2003:2003 --name pw2 cybertec/pgwatch2\nExpose port 2003 to host, so that jmeter running on host can access 2003 port which proxy to docker\nsudo docker exec -ti pw2 /bin/bash\ninflux -precision rfc3339\n"),r("s",[e._v("> create database grafana; (if you want to store dashboard json into influxdb)")])]),e._v(" "),r("blockquote",[r("p",[e._v("create database jmeter;")])]),e._v(" "),r("p",[e._v("Config  /etc/influxdb/influxdb.conf")]),e._v(" "),r("p",[e._v("Restart influxdb or docker\nStep 2: add Backend Listener\nHost: localhost, Port:2003,")]),e._v(" "),r("p",[e._v("Step 3: Config and Add Grafana dashboard\nAdd DataSource:")]),e._v(" "),r("p",[e._v("And then add graph Refer to the video from http://www.testautomationguru.com/jmeter-real-time-results-influxdb-grafana/")]),e._v(" "),r("p",[r("img",{attrs:{src:"/docs/docs_image/software/jmeter/jmeter02.png",alt:""}})]),e._v(" "),r("p",[e._v("Method 2: write to influxdb directly\nhttps://grafana.com/dashboards/1152")]),e._v(" "),r("p",[e._v("Step 1: same")]),e._v(" "),r("p",[e._v("Step 2: add jar extension and JMeterInfluxDBBackendListenerClient")]),e._v(" "),r("p",[e._v("Download the JMeter-InfluxBD-Writer https://github.com/NovaTecConsulting/JMeter-InfluxDB-Writer/releases and paste the jar into the /lib/ext directory of your JMeter installation. (Then Restart JMeter)")]),e._v(" "),r("p",[e._v("In your JMeter load script add a Backend Listener node (Add -> Listener -> Backend Listener)\nSelect JMeterInfluxDBBackendListenerClient for the Backend Listener implementation option\nProvide in the Parameters table your influxDB settings, provide a name for the test, and specify which samplers to record.")]),e._v(" "),r("p",[e._v("Step 3: Config Grafana\nAdd DataSource")]),e._v(" "),r("p",[e._v("download dashboard json and import by uploadinghttps://grafana.com/dashboards/1152")]),e._v(" "),r("p",[r("img",{attrs:{src:"/docs/docs_image/software/jmeter/jmeter03.png",alt:""}})]),e._v(" "),r("ol",{attrs:{start:"5"}},[r("li",[e._v("assertion\nhttps://stackoverflow.com/questions/39573591/count-the-number-of-occurences-of-a-string-in-response-data\nhttps://jmeter.apache.org/usermanual/component_reference.html#JDBC_Request")])]),e._v(" "),r("h2",{attrs:{id:"_3-troubleshooting"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-troubleshooting"}},[e._v("#")]),e._v(" 3. Troubleshooting")]),e._v(" "),r("p",[e._v("Constant Throughput Timer https://www.blazemeter.com/blog/how-use-jmeters-throughput-constant-timer")]),e._v(" "),r("p",[e._v("Error java.sql.SQLException: ORA-00911: invalid character\t\nRemove or add ; at the end of the query statement;")]),e._v(" "),r("p",[e._v("Can we run two thread groups parallely in a single test plan in Jmeter? https://stackoverflow.com/questions/24239003/can-we-run-two-thread-groups-parallely-in-a-single-test-plan-in-jmeter\njmeter response times using Response Time over Time https://stackoverflow.com/questions/28368011/jmeter-response-times-using-response-time-over-time")]),e._v(" "),r("p",[e._v("to Generate html report, change LoopCount from forever to limited loops")]),e._v(" "),r("h2",{attrs:{id:"_4-advance"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-advance"}},[e._v("#")]),e._v(" 4. Advance")]),e._v(" "),r("h3",{attrs:{id:"_4-1-features"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-features"}},[e._v("#")]),e._v(" 4.1 Features")]),e._v(" "),r("p",[e._v("Recording Tests\nhttps://jmeter.apache.org/usermanual/jmeter_proxy_step_by_step.html\nDistributed Testing\nhttps://jmeter.apache.org/usermanual/jmeter_distributed_testing_step_by_step.html")]),e._v(" "),r("h3",{attrs:{id:"_4-2-plugins"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-plugins"}},[e._v("#")]),e._v(" 4.2 Plugins")]),e._v(" "),r("p",[e._v("https://jmeter-plugins.org/install/Install/\nResponse Times Over Time\nhttps://jmeter-plugins.org/wiki/ResponseTimesOverTime/")]),e._v(" "),r("p",[e._v("Servers Performance Monitoring\nhttps://jmeter-plugins.org/wiki/PerfMon/")]),e._v(" "),r("p",[e._v("?#issues: unable download plugin, cmdrunner>=2.2\nhttps://groups.google.com/forum/#!topic/jmeter-plugins/jVZ1UKPyBZY")]),e._v(" "),r("p",[r("img",{attrs:{src:"/docs/docs_image/software/jmeter/jmeter04.png",alt:""}})]),e._v(" "),r("h3",{attrs:{id:"_4-3-coding-with-jmeter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-coding-with-jmeter"}},[e._v("#")]),e._v(" 4.3 Coding with Jmeter")]),e._v(" "),r("p",[e._v("For mysql:\nhttps://docs.oracle.com/javase/tutorial/jdbc/basics/index.html\nFor postgresql:\nhttps://jdbc.postgresql.org/documentation/documentation.html\nhttps://jdbc.postgresql.org/documentation/head/index.html")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('import java.sql.*;\nimport org.apache.jmeter.protocol.jdbc.config.DataSourceElement;\n\nResultSet rs = null;\nResultSetMetaData rsmd = null;\nCallableStatement stmt;\nConnection conn=null;\ntry {\n    \n    Class.forName("org.postgresql.Driver");\n    // "myConnConfigName" is the \'JDBC Connection Configuration\' variable name\n    log.info("#####################################");\n    //conn = DataSourceElement.getConnection("postgresqlConfig");\n    String url = "jdbc:postgresql://10.20.70.168:6432/oureadb?user=ourea_exec&password=ourea_exec";\n    conn = DriverManager.getConnection(url);\n    conn.setAutoCommit(false);\n    log.info("----------------------a");\n\tstmt = conn.prepareCall("{? = CALL pg_func_loadtest_get_userreport_by_webcode(?) }");\n    \n\tstmt.registerOutParameter(1, Types.OTHER);\n\tstmt.setString(2, "SSS988");\n\tstmt.execute();\n    rs = (ResultSet) stmt.getObject(1);\n\twhile (rs.next()) {\n    \trsmd = rs.getMetaData();\n\n    \tlog.info("ColumnCount:" + rsmd.getColumnCount().toString());\n    \tlog.info("RowNo:" + rs.getRow().toString());\n\n    \t// TODO: Store data.\n    \t//   \tLoop through columns with rs.getString(i);\n\t}\n    \n}\ncatch(Throwable ex) {\n    log.error("###################################");\n\tlog.error("Error message: ", ex);\n\tlog.error("###################################");\n\tthrow ex;\n}\nfinally {\n\tif (rs != null) {\n    \trs.close();\n\t}\n\tif (stmt != null) {\n    \tstmt.close();\n\t}\n\tif (conn != null) {\n    \tconn.close();\n\t}\n}\n\n')])])]),r("p",[e._v("?#issues unresolved: cannot call sp\nKeywords tried: registerOutParameter INOUT refcursor\nhttps://jdbc.postgresql.org/documentation/head/callproc.html")]),e._v(" "),r("disqus")],1)}),[],!1,null,null,null);t.default=s.exports}}]);