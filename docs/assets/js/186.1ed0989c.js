(window.webpackJsonp=window.webpackJsonp||[]).push([[186],{618:function(n,e,t){"use strict";t.r(e);var s=t(65),a=Object(s.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("剪映小助手数据生成器")]),n._v(" "),t("p",[t("a",{attrs:{href:"https://krxc4izye0.feishu.cn/wiki/APwFwznfQimfkgkz81ecfRsbnYc",target:"_blank",rel:"noopener noreferrer"}},[n._v("剪映小助手"),t("OutboundLink")],1)]),n._v(" "),t("p",[t("a",{attrs:{href:"https://bytedance.larkoffice.com/docx/WdDOdiB1BoRyBNxlkXWcn0n3nLc",target:"_blank",rel:"noopener noreferrer"}},[n._v("speech_synthesis"),t("OutboundLink")],1)]),n._v(" "),t("h2",{attrs:{id:"技巧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#技巧"}},[n._v("#")]),n._v(" 技巧")]),n._v(" "),t("h3",{attrs:{id:"合并长语音"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#合并长语音"}},[n._v("#")]),n._v(" 合并长语音")]),n._v(" "),t("p",[n._v("循环 LoopText2Audio")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("输入：text_array->SplitLinesByComma.text_array\n中间变量：temp_audio\n输出：audio_list->speech_synthesis.link\n\n循环体 语音合成插件->speech_synthesis\n    language 英文\n    speaker_id Emily\n    voice_id Anna\n")])])]),t("p",[n._v("merge_audios\nformat->mp3\nurls->LoopText2Audio.audio_list")]),n._v(" "),t("h2",{attrs:{id:"案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#案例"}},[n._v("#")]),n._v(" 案例")]),n._v(" "),t("h3",{attrs:{id:"英文水平教学案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#英文水平教学案例"}},[n._v("#")]),n._v(" 英文水平教学案例")]),n._v(" "),t("p",[n._v("LLM:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('async def main(args: Args) -> Output:\n    params = args.params\n    # 构建输出对象\n    prompt = f"""你是一名英国幼儿园教师，为3岁儿童设计{params[\'scene\']}场景教学台词。请严格遵守：\n1. **内容要求**  \n   - 使用英式英语（例如"Tap"而非"Faucet"）  \n   - 仅包含**动作指令短句**（动词开头，每句≤5单词）  \n   - 覆盖6个洗手步骤：开水→湿手→抹皂→搓泡→冲洗→擦干  \n   - 每步骤1-2句台词，共输出6到9句  \n\n2. **格式要求**  \n   - 每句英文单独一行  \n   - 结尾**不加标点**（无句号/感叹号）  \n   - 禁用编号、标题、额外说明  \n   - 最终输出以逗号分隔的纯文本  \n\n示例合格输出：  \nTurn on the tap,  \nWet your hands,  \nRub the soap,\nRinse off bubbles,\nDry your hand\n"""\n    return {"custom_prompt": prompt}\n')])])]),t("p",[n._v("SplitLinesByComma:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("import re\nfrom typing import List\n\nasync def main(args: Args) -> Output:\n    params = args.params\n    text = params['text'].strip()  # 获取输入文本并去除首尾空格\n    # 构建输出对象\n    def pure_punctuation_split(text: str) -> List[str]:\n        # 1. 按换行符分割文本（保留段落结构）\n        lines = [line.strip() for line in text.split('\\n') if line.strip()]\n        sentences = []\n        \n        # 2. 遍历每行，按标点符号分句\n        for line in lines:\n            # 使用正则按标点分割，同时保留标点符号\n            segs = re.split(r'([,.!?])', line)  # 关键点：捕获分组保留标点[1,7](@ref)\n            buffer = \"\"\n            for seg in segs:\n                if seg in [',', '.', '!', '?']:\n                    # 遇到标点时提交当前句子\n                    if buffer:  # 避免空buffer追加标点\n                        sentences.append(buffer.strip() + seg)  # 将标点附加到句尾\n                    buffer = \"\"\n                else:\n                    buffer += seg\n            # 收集剩余内容（无标号结尾的部分）\n            if buffer: \n                sentences.append(buffer.strip())\n        \n        return sentences  # 直接返回按标点分割的句子列表\n    \n    # 返回分割结果\n    return {\"text_array\": pure_punctuation_split(text)}\n")])])]),t("p",[n._v("分支一：\n+ 循环 LoopText2Audio")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("    输入：text_array->SplitLinesByComma.text_array\n    中间变量：temp_audio\n    输出：audio_list->speech_synthesis.link\n\n    循环体 语音合成插件->speech_synthesis\n        language 英文\n        speaker_id Emily\n        voice_id Anna\n\n+ 插件剪映小助手数据生成器-> audio_timelines\n    输入 links\n")])])]),t("p",[n._v("分支二：\n+ 循环 LoopText2Image\n输入：text_array->SplitLinesByComma.text_array\n输出：images-> 图像生成节点.data\n循环体 翻译节点--图像生成节点\n儿童英文教学卡片，线条简约，"+n._s(n.scene)+"场景，画面突出细节："+n._s(n.text)+"，角色表情：嘴角上扬（+15°）且苹果肌隆起，眼轮匝肌轻微收缩（眼尾皱褶≤2条），眉毛平直或眉尾微扬（与鼻翼-外眼角连线平行），尽量保持角色一致，文本必须100%准确："+n._s(n.origin_english_text)+"，若无法正确渲染则隐藏文字，无乱码、无拼写错误、无语法错误\n负向提示词:no words, letters, fonts, labels, signs, alphabets, logos, trademarks, watermarks, handwriting")]),n._v(" "),t("p",[n._v("两个分支合并：")]),n._v(" "),t("ul",[t("li",[n._v("插件剪映小助手数据生成器 captions_infos\ntexts->SplitLinesByComma.text_array\ntimelines->audio_timelines.timelines")]),n._v(" "),t("li",[n._v("插件剪映小助手数据生成器 audio_infos\nmp3_urls->LoopText2Audio.audio_list\ntimelines->audio_timelines.timelines")]),n._v(" "),t("li",[n._v("插件剪映小助手数据生成器 imgs_infos\nimgs->LoopText2Image.images\ntimelines->audio_timelines.timelines")]),n._v(" "),t("li",[n._v("插件剪映小助手 create_draft\nheight 1080 width 1920")]),n._v(" "),t("li",[n._v("插件剪映小助手 add_images\ndraft_url->create_draft.draft_url\nimage_infos->imgs_infos.infos")]),n._v(" "),t("li",[n._v("插件剪映小助手 add_audio\ndraft_url->create_draft.draft_url\naudio_infos->audio_infos.infos")]),n._v(" "),t("li",[n._v("插件剪映小助手 add_captions\ndraft_url->create_draft.draft_url\ncaptions_infos->captions_infos.infos")])])])}),[],!1,null,null,null);e.default=a.exports}}]);