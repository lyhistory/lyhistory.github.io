<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-06-05T18:07:05+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">LIU YUE’S - NOTES TO SHARE</title><subtitle>tech notes;</subtitle><author><name>LIU YUE</name></author><entry><title type="html">troubleshooting intranet access issue raised by wrong arp</title><link href="http://localhost:4000/arp/" rel="alternate" type="text/html" title="troubleshooting intranet access issue raised by wrong arp" /><published>2019-05-31T00:00:00+08:00</published><updated>2019-05-31T00:00:00+08:00</updated><id>http://localhost:4000/arp</id><content type="html" xml:base="http://localhost:4000/arp/">&lt;p&gt;I got an issue access the shared folder on the other pc in the same intranet at home, actually it was working fine a few days ago.
both pc are win10 os.&lt;/p&gt;

&lt;p&gt;without firm knowlege on networking I started to google without thinking, tried all the online suggestions but no luck;&lt;/p&gt;

&lt;p&gt;ok, it could be something wrong either on my win10 or the other one, so I turned off firewall, started all the “file and printer sharing” realted services, turned on sharing for private/public network, grant remote access to both everyone and guest with full permissions, 
even tried modify regedit(registry editor) to enable AllowInsecureGuestAuth, still no luck;&lt;/p&gt;

&lt;p&gt;finally I come to think of ping, source ip:192.168.0.141, target ip:192.168.0.113, so ping 192.168.0.113 result in:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Pinging 192.168.0.113 with 32 bytes of data:
Reply from *192.168.0.141*: Destination host unreachable.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;the ip “Reply from “ is the source machine, it indicates that it’s something wrong with the source machine, 
then I run ‘arp -a’, 
&lt;img src=&quot;/content/images/post/20190531/arp.png&quot; alt=&quot;&quot; /&gt;
now things get a bit clear, the target ip isn’t in the arp table, I tried arp -d to reset arp, but not working, so I decided the easiest way is to restart router to clear the arp table;
after restarting router, all settled!&lt;/p&gt;

&lt;p&gt;finally thoughts: I should spare some time to learn networking.
refer:
https://www.coursera.org/learn/network-protocols-architecture&lt;/p&gt;</content><author><name>LIU YUE</name></author><summary type="html">I got an issue access the shared folder on the other pc in the same intranet at home, actually it was working fine a few days ago. both pc are win10 os.</summary></entry><entry><title type="html">Mysql replication test between different version</title><link href="http://localhost:4000/mysql_replication/" rel="alternate" type="text/html" title="Mysql replication test between different version" /><published>2019-05-19T00:00:00+08:00</published><updated>2019-05-19T00:00:00+08:00</updated><id>http://localhost:4000/mysql_replication</id><content type="html" xml:base="http://localhost:4000/mysql_replication/">&lt;p&gt;Master: mysql5.7
&lt;img src=&quot;/content/images/post/20190519/master1.png&quot; alt=&quot;&quot; /&gt;
Slave: mysql8.0
&lt;img src=&quot;/content/images/post/20190519/slave1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;step-1-config-master-and-dump-data&quot;&gt;step 1: config master and dump data&lt;/h1&gt;
&lt;p&gt;conf my.ini And restart:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server-id=1
log-bin=mysql-bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;create and grant repl user:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:\Program Files\MySQL\MySQL Server 5.7\bin&amp;gt;mysqld -V
mysqld  Ver 5.7.24 for Win64 on x86_64 (MySQL Community Server (GPL))

mysql&amp;gt; CREATE USER 'repl'@'%' IDENTIFIED BY '123456';
Query OK, 0 rows affected (0.01 sec)

mysql&amp;gt; GRANT REPLICATION SLAVE ON *.* TO 'repl'@'%';
Query OK, 0 rows affected (0.01 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;dump existing data
&lt;code class=&quot;highlighter-rouge&quot;&gt;c:\Program Files\MySQL\MySQL Server 5.7\bin&amp;gt;mysqldump -u repl -p 123456 --all-databases --master-data &amp;gt; dbdump.db&lt;/code&gt;
&lt;img src=&quot;/content/images/post/20190519/master2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;step-2-config-slave-and-import-data&quot;&gt;step 2: config slave and import data&lt;/h1&gt;
&lt;p&gt;conf my.ini And restart:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[mysqld]
server-id=2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;import data:
&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql -u root -p &amp;lt; dbdump.db&lt;/code&gt;
&lt;img src=&quot;/content/images/post/20190519/slave2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;step-3-unlock-tables-on-master-and-change-master-on-slave&quot;&gt;step 3: unlock tables on master and change master on slave&lt;/h1&gt;
&lt;h2 id=&quot;on-master&quot;&gt;On master&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; UNLOCK TABLES;
Query OK, 0 rows affected (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;find out master log file and position:
&lt;img src=&quot;/content/images/post/20190519/master3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;on-slave&quot;&gt;On slave&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CHANGE MASTER TO MASTER_HOST='192.168.0.141',MASTER_PORT=3306,MASTER_USER='repl',MASTER_PASSWORD='123456',MASTER_LOG_FILE='mysql-bin.000001',MASTER_LOG_POS=52113;

 START SLAVE;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/content/images/post/20190519/slave3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;reference:
https://dev.mysql.com/doc/refman/5.7/en/
https://dev.mysql.com/doc/refman/5.7/en/replication-configuration.html
https://dev.mysql.com/doc/refman/5.7/en/replication-howto-masterbaseconfig.html
https://www.youtube.com/watch?v=u8klgz4BU1A&lt;/p&gt;

&lt;p&gt;#promote/change salve to master
https://sysadmin.compxtreme.ro/mysql-promoting-a-slave-to-master/
#switch master
https://mysqlhighavailability.com/mysql-5-7-6-it-is-easier-to-switch-master-now/&lt;/p&gt;</content><author><name>LIU YUE</name></author><summary type="html">Master: mysql5.7 Slave: mysql8.0</summary></entry><entry><title type="html">Apache storm starter</title><link href="http://localhost:4000/storm/" rel="alternate" type="text/html" title="Apache storm starter" /><published>2019-05-17T00:00:00+08:00</published><updated>2019-05-17T00:00:00+08:00</updated><id>http://localhost:4000/storm</id><content type="html" xml:base="http://localhost:4000/storm/">&lt;p&gt;run WordCountTopology in Local Mode and (Local) Cluster Mode
version: 1.2.2
env: vms centos7
example:https://github.com/apache/storm/blob/v1.2.2/examples/storm-starter/src/jvm/org/apache/storm/starter/WordCountTopology.java&lt;/p&gt;
&lt;h1 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h1&gt;
&lt;p&gt;Download storm&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;make sure you have the storm-starter code available on your machine. If you have already downloaded storm from http://storm.apache.org/downloads.html then you will find the storm-starter code under your apache-storm-&amp;lt;version&amp;gt;/examples/ directory. Alternatively, Git/GitHub beginners may want to use the following command to download the latest storm-starter code and change to the new directory that contains the downloaded code, but make sure you have the same version of storm running.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;first step&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /apache-storm-1.2.2/examples/storm-starter
mvn clean install -DskipTests=true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;local-mode&quot;&gt;Local Mode&lt;/h1&gt;
&lt;p&gt;CMD:
&lt;code class=&quot;highlighter-rouge&quot;&gt;mvn compile exec:java -Dstorm.topology=org.apache.storm.starter.WordCountTopology&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;fixed-no-module-named-storm-and-attributeerror-module-object-has-no-attribute-basicbolt&quot;&gt;fixed: No module named storm and AttributeError: ‘module’ object has no attribute ‘BasicBolt’&lt;/h2&gt;
&lt;p&gt;reason: the python script which SplitSentence uses cannot find dependency, and initially I thought the “import storm” simply using ‘pip install storm’, but it turns out not the one it’s using, finally solved by:
Download https://github.com/apache/storm/blob/master/storm-multilang/python/src/main/resources/resources/storm.py
put it into any folder you want,  for example: /apache-storm-1.2.2/examples/storm-starter/multilang/resources/
, you may find another storm.py in /apache-storm-1.2.2/bin/storm.py, but don’t use that one, I’m not sure the purpose of it, it doesn’t contain BasicBolt&lt;/p&gt;

&lt;p&gt;then change the main function to:&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;SplitSentence&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pythonSplit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SplitSentence&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PYTHONPATH&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/apache-storm-1.2.2/examples/storm-starter/multilang/resources/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pythonSplit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setEnv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;TopologyBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TopologyBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSpout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;spout&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RandomSentenceSpout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setBolt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;split&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pythonSplit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;shuffleGrouping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;spout&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setBolt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;count&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WordCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fieldsGrouping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;split&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fields&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;word&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDebug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setNumWorkers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;StormSubmitter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;submitTopologyWithProgressBar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createTopology&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setMaxTaskParallelism&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;LocalCluster&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cluster&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocalCluster&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;cluster&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;submitTopology&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;word-count&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createTopology&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;600000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;cluster&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;shutdown&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;basically we just need to set python path point to the folder of ‘storm.py’
I’ve also changed Thread.sleep(10000) 10sec to 10mins, because I find the localcluster auto terminated before spout and bolt starting, I guess  that’s because I tested it using virtualbox, so the cluster startup very slow.&lt;/p&gt;
&lt;h1 id=&quot;local-cluster-mode&quot;&gt;(Local) Cluster Mode&lt;/h1&gt;
&lt;p&gt;config:
/apache-storm-1.2.2/conf/storm.yaml&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;storm.local.dir: &quot;storm-local&quot;
storm.log4j2.conf.dir: &quot;log4j2&quot;
storm.zookeeper.servers:
 - &quot;localhost&quot;
storm.zookeeper.port: 2181
storm.zookeeper.root: &quot;/storm&quot;
storm.zookeeper.session.timeout: 20000
storm.zookeeper.connection.timeout: 15000
storm.zookeeper.retry.times: 5
storm.zookeeper.retry.interval: 1000
storm.zookeeper.retry.intervalceiling.millis: 30000
storm.zookeeper.auth.user: null
storm.zookeeper.auth.password: null

nimbus.seeds: [&quot;localhost&quot;]
ui.host: 0.0.0.0
ui.port: 8080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;then run::&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;storm dev-zookeeper 
storm nimbus
storm supervisor
storm ui
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;screenshot
&lt;img src=&quot;/content/images/post/20190517/storm1.png&quot; alt=&quot;&quot; /&gt;
open storm ui portal and click on the port number to debug, obviously the full link of it isn’t correct, so I just extract the relative path and check it manually
&lt;img src=&quot;/content/images/post/20190517/storm2.png&quot; alt=&quot;&quot; /&gt;
check the log content
vim /apache-storm-1.2.2/logs/workers-artifacts/wordcount-1-1558059690/6702/worker.log
then I found an exception ::Error on initialization of server mk-worker&lt;/p&gt;
&lt;h2 id=&quot;fixed-error-on-initialization-of-server-mk-worker&quot;&gt;fixed: Error on initialization of server mk-worker&lt;/h2&gt;
&lt;p&gt;folder permission error for storm.local.dir: “storm-local”
solved by
&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod 777 /apache-storm-1.2.2/storm-local/&lt;/code&gt;&lt;/p&gt;</content><author><name>LIU YUE</name></author><summary type="html">run WordCountTopology in Local Mode and (Local) Cluster Mode version: 1.2.2 env: vms centos7 example:https://github.com/apache/storm/blob/v1.2.2/examples/storm-starter/src/jvm/org/apache/storm/starter/WordCountTopology.java Prerequisites Download storm</summary></entry><entry><title type="html">[Hadoop ecosystem] Chapter 1: Data Storage: HDFS</title><link href="http://localhost:4000/hdfs/" rel="alternate" type="text/html" title="[Hadoop ecosystem] Chapter 1: Data Storage: HDFS" /><published>2019-04-27T00:00:00+08:00</published><updated>2019-04-27T00:00:00+08:00</updated><id>http://localhost:4000/hdfs</id><content type="html" xml:base="http://localhost:4000/hdfs/">&lt;h3 id=&quot;overview&quot;&gt;OVERVIEW&lt;/h3&gt;
&lt;h4 id=&quot;keywords&quot;&gt;keywords&lt;/h4&gt;
&lt;p&gt;Distributed System: is one in which components located at networked computers communicate and coordinate their actions only by passing messages.
DSM: Distributed Shared Memory
DFS: Distributed File System: operating remote files like local stroage
Distributed transactions&lt;/p&gt;

&lt;h4 id=&quot;key-concerns-for-distributed-system&quot;&gt;key concerns for distributed system:&lt;/h4&gt;
&lt;p&gt;concurrency control
availability
scalability
reliability and fault tolerrance&lt;/p&gt;

&lt;h4 id=&quot;key-concerns-for-dfs&quot;&gt;key concerns for DFS:&lt;/h4&gt;
&lt;p&gt;naming
cache (writing policy; cache consistency)
semantics (read returns the data due to latest write operation)&lt;/p&gt;

&lt;h3 id=&quot;hdfs&quot;&gt;HDFS&lt;/h3&gt;
&lt;p&gt;HDFS doesn’t support random write, files in HDFS are ‘write once’, and HDFS is optimized for large, streaming reads of files rather than random reads,&lt;/p&gt;

&lt;p&gt;HDFS’s write-once-read-many model that relaxes concurrency control requirements, simplifies data coherency, and enables high-throughput access.
– https://hadoop.apache.org/docs/r1.2.1/hdfs_design.html&lt;/p&gt;

&lt;h4 id=&quot;key-features-of-hdfs&quot;&gt;key features of HDFS&lt;/h4&gt;
&lt;p&gt;replica
rack-awareness
write-once, read many
computation closer to data (bring program to data)
multi clients supprot (fs shell, java api for spark, flume, hue …)&lt;/p&gt;

&lt;h4 id=&quot;architecture&quot;&gt;Architecture&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/content/images/post/20190427/hdfs.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;a-comic-like-explanation-of-hdfs&quot;&gt;A comic-like explanation of HDFS&lt;/h4&gt;

&lt;iframe src=&quot;/content/files/20190427/hdfs.pdf&quot; width=&quot;100%&quot; height=&quot;900&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;</content><author><name>LIU YUE</name></author><summary type="html">Hadoop ecosystem series...</summary></entry><entry><title type="html">Hadoop ecosystem</title><link href="http://localhost:4000/hadoop_eco/" rel="alternate" type="text/html" title="Hadoop ecosystem" /><published>2019-04-27T00:00:00+08:00</published><updated>2019-04-27T00:00:00+08:00</updated><id>http://localhost:4000/hadoop_eco</id><content type="html" xml:base="http://localhost:4000/hadoop_eco/">&lt;blockquote&gt;
  &lt;p&gt;MIND MAP&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;1distributed-and-parrallel-computing&quot;&gt;1.Distributed and Parrallel computing&lt;/h1&gt;
&lt;p&gt;A distributed system is one in which components located at networked computers communicate and coordinate their actions only by passing messages.&lt;/p&gt;

&lt;p&gt;Distributed Transaction&lt;/p&gt;

&lt;p&gt;Distributed Shared Memory (DSM)&lt;/p&gt;

&lt;p&gt;Distributed File System (DFS)&lt;/p&gt;

&lt;p&gt;Parallel Computing Systems(subset of Concurrency Computing)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In parallel computing, all processors may have access to a shared memory to exchange information between processors.&lt;/li&gt;
  &lt;li&gt;In distributed computing, each processor has its own private memory (distributed memory). Information is exchanged by passing messages between the processors&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Apache Hadoop = &lt;strong&gt;HDFS&lt;/strong&gt;+MapReduce, Apache Hadoop is not designed for real time processing but for batch processing
Hadoop ecosystem includes more than Apache Hadoop MapReduce, it refers to the various components of the Apache Hadoop software library, as well as to the accessories and tools provided by the Apache Software Foundation for these types of software projects, and to the ways that they work together.&lt;/p&gt;

&lt;h1 id=&quot;2bigdata-components&quot;&gt;2.BigData components&lt;/h1&gt;
&lt;h2 id=&quot;21-data-storage&quot;&gt;2.1 Data Storage&lt;/h2&gt;
&lt;h3 id=&quot;file-system&quot;&gt;File System:&lt;/h3&gt;
&lt;p&gt;HDFS&lt;/p&gt;
&lt;h3 id=&quot;nosql&quot;&gt;NoSQL:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Column Family:
HBASE&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Key-Value:
REDIS&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Document:
MONGODB&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Graphy
neo4j
flockDB
InfiniteGraphy&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;22-data-ingestion&quot;&gt;2.2 Data Ingestion&lt;/h2&gt;
&lt;h3 id=&quot;normal-batch-mode&quot;&gt;normal batch mode&lt;/h3&gt;
&lt;p&gt;sqoop
flume&lt;/p&gt;

&lt;h3 id=&quot;messaging&quot;&gt;Messaging:&lt;/h3&gt;
&lt;p&gt;kafaka&lt;/p&gt;

&lt;h3 id=&quot;realtime&quot;&gt;Realtime:&lt;/h3&gt;
&lt;p&gt;storm&lt;/p&gt;

&lt;h2 id=&quot;23-data-processing&quot;&gt;2.3 Data Processing&lt;/h2&gt;
&lt;h3 id=&quot;batch-processing&quot;&gt;batch processing&lt;/h3&gt;
&lt;p&gt;MapReduce( v2 shipped with YARN)
SPARK&lt;/p&gt;

&lt;h3 id=&quot;realtime-processing&quot;&gt;realtime processing&lt;/h3&gt;
&lt;p&gt;Storm&lt;/p&gt;</content><author><name>LIU YUE</name></author><summary type="html">MIND MAP</summary></entry><entry><title type="html">Tutorial:Blockchain:how to stake decred</title><link href="http://localhost:4000/decred-stake/" rel="alternate" type="text/html" title="Tutorial:Blockchain:how to stake decred" /><published>2019-04-21T00:00:00+08:00</published><updated>2019-04-21T00:00:00+08:00</updated><id>http://localhost:4000/decred-stake</id><content type="html" xml:base="http://localhost:4000/decred-stake/">&lt;p&gt;official site:. decred.org&lt;/p&gt;

&lt;p&gt;GUI setup: https://docs.decred.org/getting-started/user-guides/decrediton-setup/&lt;/p&gt;

&lt;p&gt;CLI setup: https://docs.decred.org/getting-started/user-guides/cli-installation/&lt;/p&gt;

&lt;p&gt;stats: https://dcrstats.com/&lt;/p&gt;

&lt;p&gt;stakepool: https://decred.org/stakepools/&lt;/p&gt;

&lt;p&gt;questions on stake: https://stakepool.dcrstats.com/faq&lt;/p&gt;

&lt;p&gt;ultrapool pool stats: https://www.ultrapool.eu/stats&lt;/p&gt;

&lt;p&gt;Decred PoS process explained&lt;/p&gt;

&lt;p&gt;1) If you are completely new to Decred, read this first: decredible.com/mining/pos&lt;/p&gt;

&lt;p&gt;2) Download one of the wallets from Decred’s download page. Recommended wallets are Decrediton or the Command-Line wallet. Your wallet will need time to sync itself to the latest block. This may take some time. It will do so automatically in the background.&lt;/p&gt;

&lt;p&gt;3) Send your DCR to your wallet. Funds will show up if the wallet is synced to the latest block (sometimes a restart is required).&lt;/p&gt;

&lt;p&gt;4) Pick a stakepool and sign up on the pool’s website. Copy the API key they will provide to you. A list of stakepools and their websites can be found at the bottom of the Decred website. They charge a small fee (5% or less) to be used. The pool API key can be found in the settings page on their website.&lt;/p&gt;

&lt;p&gt;5) Go to the Tickets tab located within the Decredition wallet. Click Import Script and input your API key and password. Now you are connected to the pool.&lt;/p&gt;

&lt;p&gt;6) Enter the number of tickets you would like to buy. The default transaction fee of 0.001 DCR is fine (it’s the minimum). The default Expiry of 16 blocks is fine too. Click Purchase. You will be asked to enter your password to complete the transaction. You should now see a ‘Success!’ message and the ticket hash.&lt;/p&gt;

&lt;p&gt;7) Your ticket will enter the mempool and wait there to be mined.&lt;/p&gt;

&lt;p&gt;8) After your ticket is mined it will go to immature status. You can see this in the Tickets tab. You will have to wait 256 blocks (about 21 hours) for your ticket to mature and go live. Once the ticket is live, you wait for your ticket to vote.&lt;/p&gt;

&lt;p&gt;9) After a vote, your funds will need another 256 blocks to become spendable again. You receive the original ticket price plus the PoS reward of ~1.4 DCR minus the pool fee.&lt;/p&gt;

&lt;p&gt;10) On average, live tickets vote within 28 days, but it can take as long as 142.22 days (40960 blocks) to vote. If a ticket does not vote within this window, it expires, and the ticket fee is lost (don’t worry, the cost price of the ticket is refunded). There is a chance of less than 0.5% that this will happen to you.&lt;/p&gt;

&lt;p&gt;The estimated ROI is ~2% per ticket, depending on the ticket price and the PoS reward.&lt;/p&gt;

&lt;p&gt;The importance of voting&lt;/p&gt;

&lt;p&gt;The term vote is used because you will be voting on different proposals to change and improve Decred. It is the heart of the Decred governance model. You will notice there are Voting Preferences in the Tickets tab. This is where you can decide on your vote. Apart from voting, the PoS process is used to validate blocks from the PoW miners.&lt;/p&gt;

&lt;p&gt;from https://www.decredible.com/how-to-stake-decred-beginners-guide/&lt;/p&gt;</content><author><name>LIU YUE</name></author><summary type="html">official site:. decred.org</summary></entry><entry><title type="html">Tutorial:Blockchain: create website with IPFS</title><link href="http://localhost:4000/ipfs-tutorial/" rel="alternate" type="text/html" title="Tutorial:Blockchain: create website with IPFS" /><published>2019-04-21T00:00:00+08:00</published><updated>2019-04-21T00:00:00+08:00</updated><id>http://localhost:4000/ipfs-tutorial</id><content type="html" xml:base="http://localhost:4000/ipfs-tutorial/">&lt;p&gt;final result, my sample site:&lt;/p&gt;

&lt;p&gt;ipfs.io/ipns/samsara.site&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;samsara.site&lt;/p&gt;

&lt;p&gt;it’s currently hosting on my pc, loading speed quite slow, please be patient&lt;/p&gt;

&lt;p&gt;how to:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;create simple site with hugo:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;hugo new site samsara.site&lt;/p&gt;

&lt;p&gt;git init&lt;/p&gt;

&lt;p&gt;git submodule add &lt;themes url=&quot;&quot;&gt;&lt;/themes&gt;&lt;/p&gt;

&lt;p&gt;hugo -s samsara.site\ -d \publish&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;publish to ipfs ipns peer&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;ipfs init&lt;/p&gt;

&lt;p&gt;ipfs daemon&lt;/p&gt;

&lt;p&gt;ipfs add -r \publish&lt;/p&gt;

&lt;p&gt;ipfs name publish &lt;hash&gt;&lt;/hash&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;port forwarding &amp;amp; reverse proxy&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;add port forwarding in route setting&lt;/p&gt;

&lt;p&gt;dns record:&lt;/p&gt;

&lt;p&gt;txt dlink=/ipns/&lt;peer&gt;&lt;/peer&gt;&lt;/p&gt;

&lt;p&gt;start nginx&lt;/p&gt;</content><author><name>LIU YUE</name></author><summary type="html">final result, my sample site:</summary></entry><entry><title type="html">Tutorial:Blockchain:How to add BTC payment method</title><link href="http://localhost:4000/btc-payment/" rel="alternate" type="text/html" title="Tutorial:Blockchain:How to add BTC payment method" /><published>2019-04-19T00:00:00+08:00</published><updated>2019-04-19T00:00:00+08:00</updated><id>http://localhost:4000/btc-payment</id><content type="html" xml:base="http://localhost:4000/btc-payment/">&lt;p&gt;Recently I’ve been asked to provide a demo of BTC top up and withdraw services to integrate with our website.
As a Chinese saying goes that lay a brick to attract a jade, the purpose I wrote down my thoughts and some notes is only hoping more people would join the discussion and correct me.&lt;/p&gt;

&lt;p&gt;Objectives: basically our website provides membership service for users to top up and enjoy attracted discounts and bonus awards, to cater for arising demands that more and more users prefer BTC than fiat currencies, we decide to introduce one more payment channel with requirements described as follows:&lt;/p&gt;

&lt;h1 id=&quot;11-functionalities&quot;&gt;1.1 Functionalities&lt;/h1&gt;
&lt;p&gt;1&amp;gt; Allow users to top up with BTC, so users can transfer in BTC and convert into platform supported fiat balance.
2&amp;gt; Allow users to withdraw their remained balance and receive converted BTC amount with their own BTC address&lt;/p&gt;

&lt;h1 id=&quot;12-concerns&quot;&gt;1.2 Concerns&lt;/h1&gt;
&lt;p&gt;1&amp;gt; How to generate and assign BTC address to each user safely without exposing private key
Can be solved by BIP32 Hierarchical deterministic key creation,
basically we can generate child BTC address from XPUB(parent extension public key), so the web site that communicates to the insecure external network just need to know “parent extension public key”.
[Refer to https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki:
Deterministic wallets do not require such frequent backups, and elliptic curve mathematics permit schemes where one can calculate the public keys without revealing the private keys.]&lt;/p&gt;

&lt;p&gt;2&amp;gt; How to maintain so many BTC addresses that assigned to users in an efficient manner
By adopting BIP44 protocol, we can maintain BTC address in a structured and compatible format, for example, according to BIP44, we can design two main accounts for example:
External account(for users): m/44’/0’/0’/0/address_index
Internal account(for internal use): m/44’/0’/1’/0/address_index
we can derive fresh BTC key info with parent key and increment address index,
And by linking BTC address info(address, index, creationdate) with userid in the DB table, later on, we can even implement address recycle logic: simply cross check user top up history and BTC address creation date to recycle for example those that haven’t been used for 3 months.&lt;/p&gt;

&lt;p&gt;3&amp;gt; How to manage those “small balance”(accurately should be utxo) received by thousands of BTC addresses that we have assigned to users
Aggregate and transfer the “small balance” into internal wallet&lt;/p&gt;

&lt;p&gt;4&amp;gt; How do we handle user withdraw requests, should we simply transfer from ‘central wallet’
To be honest, I cannot think of more reasonable design than a central wallet, so in my design, central wallet serve as “settlement reserve funds”, we can use internal account mentioned above in 2&amp;gt; m/44’/0’/1’/0/address_index , to keep it simple we can just use one fixed account m/44’/0’/1’/0/0, and we should also keep monitoring the balance of the internal account to ensure sufficient funds available for withdraw requests.&lt;/p&gt;

&lt;p&gt;5&amp;gt; How to set up a so-called cold and hot wallet, and where should we place them in our design
From the above discussion we already have a rough idea that there should be different levels of security requirements:
i) security level for external accounts that assigned to users are low, for individual users, the amount they top up supposed to be relatively small amount of money, and we need to aggregate those small amount into a central account regularly, therefore external accounts are definitely hot wallet
ii) security level for internal accounts are high, because internal accounts hold a large amount of money, but can we really make it 100% cold storage? I don’t think so, because it still needs to transfer out BTC regularly corresponding to users withdraw requests, you may say that we can create raw transaction and sign it offline, but still you need to know the withdraw requests first(connect to DB), and you need to know unspent transactions of this account in order to compose raw transaction(connect to BTC node), thus it can not be a physically disconnected cold wallet,but we can increase secure level by keeping it in secure intranet, let’s call it semi-cold wallet
iii) as long as BTC is not stored on a physically isolated machine, it’s not 100% safe, we shouldn’t put all the eggs in one basket, so what we can do is put some percentage of the BTC into cold wallet, let’s say 60% in cold wallet, 40% in semi-cold wallet to handle withdraw.&lt;/p&gt;

&lt;h1 id=&quot;13-workflow&quot;&gt;1.3 Workflow&lt;/h1&gt;
&lt;p&gt;1&amp;gt; Top-up Flow
i) The user selects BTC payment method and key in 15000 CNY, the website app automatically displays 0.5 BTC based on the current exchange rate, the user confirms and clicks on submit
ii) Website app generates a BTC top up address(m/44’/0’/0’/0/address_index) for the user and create a pending order record [insert into topup_order &amp;lt;uuid,userid,btcaddress,btcindex,requestamt,exchangerate,createdate,status&amp;gt;]
iii) The user transfers BTC to the top up address assigned to him (he may transfer BTC from any exchanges or wallets as he like)
iv) The scheduler service will periodically retrieve pending top-up requests from DB, and check transactions by RPC call to the BTC node, once detecting transactions to addresses that are in watchlist, update the user’s balance accordingly and update the record with txid/vout/scriptPub[update topup_order&amp;lt;uuid,userid,btcaddress,btcindex,requestamt,exchangerate,createdate,status,realamt,txid,vout,scriptpub&amp;gt;].
v) the scheduler service will then compose raw transaction based on realamt,txid,vout,scriptpub to transfer btc from users topup address(external account) to internal account, aggregate 40% of received BTC to a semi-cold wallet address(e.g m/44’/0’/1’/0/index), 60% of received BTC to a cold wallet(e.g m/44’/0’/2’/0/index)&lt;/p&gt;

&lt;p&gt;2&amp;gt; Withdraw Flow
i) The user chooses to convert remained balance to BTC, key in 15000 CNY and provides a valid BTC address, the website app automatically displays 0.5 BTC based on the current exchange rate, the user confirms and submits withdraw request
ii) Website app validates user’s balance and BTC address, and then creates a pending withdraw record[insert into withdraw_order &amp;lt;uuid,userid,btcaddress,btcindex,balance,btcamt,exchangerate,createdate,status&amp;gt;]
iii) The scheduler service will periodically process all the pending withdraw request, transfer BTC from semi-cold wallet to the user’s BTC address&lt;/p&gt;

&lt;h1 id=&quot;14-tech-spec&quot;&gt;1.4 Tech spec&lt;/h1&gt;

&lt;p&gt;1&amp;gt; Bitcoin core v0.17
https://github.com/bitcoin/bitcoin/blob/master/doc/build-unix.md
2&amp;gt; Bx tool (libbitcoin)
https://github.com/libbitcoin/libbitcoin-explorer
https://github.com/libbitcoin/libbitcoin-explorer/wiki
Note: to config for testnet
vim /home/peter/libbitcoin-explorer/etc/libbitcoin/bx.cfg
&lt;img src=&quot;/content/images/post/20190419/1.png&quot; alt=&quot;&quot; /&gt;
3&amp;gt; Python
pip install python-bitcoinrpc
https://github.com/jgarzik/python-bitcoinrpc
bip32utils
https://github.com/lyndsysimon/bip32utils
4&amp;gt; Others
BTC-Fiat exchange rate API
https://blockchain.info/tobtc?currency=CNY&amp;amp;value=1
BTC transaction fees API
https://bitcoinfees.21.co/api&lt;/p&gt;

&lt;h1 id=&quot;15-hands-on&quot;&gt;1.5 Hands-on&lt;/h1&gt;

&lt;h2 id=&quot;151-generate-keys-for-testnet-that-comply-with-bip32-bip39-and-bip44&quot;&gt;1.5.1 Generate keys for testnet that comply with bip32 bip39 and bip44&lt;/h2&gt;
&lt;p&gt;be aware that config your tools properly if testing on regtest or testnet, and also for regtest and testnet, cointype in bip44 path should be 1 https://github.com/satoshilabs/slips/blob/master/slip-0044.md
So now, I’ll use bx tools to generate mnemonic and master node:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/post/20190419/2.png&quot; alt=&quot;&quot; /&gt;
The website app uses xpub(m/44’/1’/0’/0)[tpubDFCmqNxHDiBWw9e8XUEhkHqcw1i4drCe2mwwpR83eA2Arfmq8hJkUeVYY7hYaQWEo4HZDQ86FiRYj8Lr3e9UT8bYi7yLvbNbXgqyJeqLYii] for user topup address generation;
The scheduler service uses xprv(m/44’/1’/0’/0)[tprv8iWjgxv35LVr3gcLdpa7LtBWMzC8UX1jTUMAXu5kDtDn2BX4WJVAJ9sgMzFjuoiWjhUdamEeB7sxPS6uzkmcEAAXNAevuaRWYQFMwX713mP] to aggregate and transfer btc from topup address to internal address(semi-cold and cold wallet, in this demo, we simply aggregate and transfer into addr(m/44’/1’/1’/0/0)[muz1awk6YXQkP29dt1tdRpBTonmqAqwdst]).&lt;/p&gt;

&lt;h2 id=&quot;152-setup-test-env&quot;&gt;1.5.2 Setup Test Env&lt;/h2&gt;
&lt;p&gt;1&amp;gt; Create a btc key pair on testnet as user’s own btc account
BTC address generator https://bitcoinpaperwallet.com/bitcoinpaperwallet/generate-wallet.html
mg9H4QPYcjqTjURFVSNDQQkFBx3FCxD3JB
91fVLr2vDHRFvmVKjABfqX9163oAFTCJAyQk63RacCX2rs1ruA1
2&amp;gt; Faucet - Get BTC for testing
https://coinfaucet.eu/en/btc-testnet/
3&amp;gt; GUI for user to transfer BTC
Bitcoin core windows https://bitcoin.org/en/download
To import private key Help -&amp;gt; Debug Window -&amp;gt; Console-&amp;gt; importprivkey 91fVLr2vDHRFvmVKjABfqX9163oAFTCJAyQk63RacCX2rs1ruA1
&lt;img src=&quot;/content/images/post/20190419/3-1.png&quot; alt=&quot;&quot; /&gt;
4&amp;gt; host btc node demon
vim ~/.bitcoin/bitcoin.conf
&lt;img src=&quot;/content/images/post/20190419/3.png&quot; alt=&quot;&quot; /&gt;
bitcoind -testnet -printtoconsole/-daemon
And then import our internal account:
bitcoin-cli -testnet importprivkey cVHBtHK7kzze7yqF5En4Psbw2ZZdUEJ8jF4KAMXhLpuSwUf4fZAU “internal0” true&lt;/p&gt;

&lt;p&gt;5&amp;gt; Testnet explorer - monitor both user’s own btc address and our system generated external/internal addresses
https://live.blockcypher.com/btc-testnet/address/mg9H4QPYcjqTjURFVSNDQQkFBx3FCxD3JB/
https://live.blockcypher.com/btc-testnet/address/n3ENHgEF9CTb3KnJotGQEuWScA9aAKyR7W/
https://live.blockcypher.com/btc-testnet/address/muz1awk6YXQkP29dt1tdRpBTonmqAqwdst/&lt;/p&gt;

&lt;h2 id=&quot;153-website-app&quot;&gt;1.5.3 Website app&lt;/h2&gt;
&lt;p&gt;You can use nodejs webpack to create a very simple web app
https://webpack.js.org/api/node/
And then to generate top up address from xpub(m/44’/1’/0’/0)
Simply import bitcoinjs lib and refer to sample code:
https://github.com/bitcoinjs/bitcoinjs-lib/blob/master/test/integration/bip32.js
&lt;img src=&quot;/content/images/post/20190419/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;154-the-scheduler-monitor-service&quot;&gt;1.5.4 The Scheduler Monitor Service&lt;/h2&gt;
&lt;p&gt;1&amp;gt; Topup
&lt;img src=&quot;/content/images/post/20190419/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2&amp;gt; Aggregation and transfer from external user top up addresses to internal account
&lt;img src=&quot;/content/images/post/20190419/6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3&amp;gt; Withdraw
&lt;img src=&quot;/content/images/post/20190419/7.png&quot; alt=&quot;&quot; /&gt;
Note:For withdraw btc from semi-cold wallet, I find it’s not feasible to use signtransactionwithkey, because that requires knowledge of all the utxo of the semi-cold wallet, and keep track of all the utxo requires lots of work and sophisticated design, so in this demo, I choose an easier way, as we already importprivkey of the internal account to bitcoin core upfront, just straightforward use sendmany to transfer BTC, so the bitcoin core wallet will do the dirty work for us&lt;/p&gt;</content><author><name>LIU YUE</name></author><summary type="html">Recently I’ve been asked to provide a demo of BTC top up and withdraw services to integrate with our website. As a Chinese saying goes that lay a brick to attract a jade, the purpose I wrote down my thoughts and some notes is only hoping more people would join the discussion and correct me.</summary></entry><entry><title type="html">strongvpn使用指南</title><link href="http://localhost:4000/strongvpn/" rel="alternate" type="text/html" title="strongvpn使用指南" /><published>2019-04-08T00:00:00+08:00</published><updated>2019-04-08T00:00:00+08:00</updated><id>http://localhost:4000/strongvpn</id><content type="html" xml:base="http://localhost:4000/strongvpn/">&lt;p&gt;遵纪守法是每个公民的责任,本文目的纯粹是给做外贸业务或者相关业务的朋友介绍一款可以使用外部网络的软件,当然是收费的,不推荐免费的,因为这种免费的软件一般都不稳定,所以只推荐我一直在用的老牌产品strongvpn服务,支持支付宝付款.&lt;/p&gt;

&lt;h2 id=&quot;镜像站点&quot;&gt;镜像站点&lt;/h2&gt;
&lt;p&gt;主站因为你知道原因一般都是被封的,所以这里给出镜像站点列表
如果某个链接不可以访问，请选择下面任意一个可以访问的镜像链接&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://intranet.strongconnect.net/services/strongvpn/refer/204835b682517019/&quot;&gt;https://intranet.strongconnect.net/services/strongvpn/refer/204835b682517019/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://intranet.strongtech.org/services/strongvpn/refer/204835b682517019/&quot;&gt;https://intranet.strongtech.org/services/strongvpn/refer/204835b682517019/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://intranet.strtech.org/services/strongvpn/refer/204835b682517019/&quot;&gt;https://intranet.strtech.org/services/strongvpn/refer/204835b682517019/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://intranet.strongconnectivity.com/services/strongvpn/refer/204835b682517019/&quot;&gt;https://intranet.strongconnectivity.com/services/strongvpn/refer/204835b682517019/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://intranet.reliablehosting.com/services/strongvpn/refer/204835b682517019/&quot;&gt;https://intranet.reliablehosting.com/services/strongvpn/refer/204835b682517019/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;主站（国内被屏蔽）
&lt;a href=&quot;https://intranet.strongvpn.com/services/strongvpn/refer/204835b682517019/&quot;&gt;https://intranet.strongvpn.com/services/strongvpn/refer/204835b682517019/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;如何使用&quot;&gt;如何使用&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;使用软件则直接登录就可以使用，国家/地点可以使用auto自动模式；当然也可以自行选择国家/地区，具体操作请看后面
软件下载
&lt;img src=&quot;/content/images/post/20190409/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;对于ios用户，也可以选择手动设置，可以从“设置settings=》VPN”进行设置，具体如下&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;     进入&quot;设置Settings&quot;，找到点击&quot;VPN&quot; ，然后&quot;添加VPN配置...&quot;.：
     点击 &quot;类型Type&quot;，选择&quot;IKEv2&quot;，
     描述Description: StrongVPN (随便填写)
     Server: ×××××
     Remote ID: reliablehosting.com
     Local ID: reliablehosting.com
     Authentication: Username
     Username: ×××××
     Password: ××××××
     Proxy: OFF
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;点击右上角”完成Done”，然后想使用的时候直接划一下status状态按钮即可。
&lt;img src=&quot;/content/images/post/20190409/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上面的配置内容可以在这里找到（或者直接找客服要，网站右下角客服）
&lt;img src=&quot;/content/images/post/20190409/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;天朝用户特别说明&quot;&gt;天朝用户特别说明&lt;/h2&gt;

&lt;p&gt;对于天朝用户，推荐使用 United States - San Francisco （尤其是ios用户）
并且对于android和windows用户来说，最好选择下面的V1版本:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mirror4.reliablehosting.com/android/1.7.0.apk&quot;&gt;android V1下载链接&lt;/a&gt; 
&lt;a href=&quot;https://mirror2.reliablehosting.com/win/StrongVPN-latest.exe&quot;&gt;windows V1下载链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;V1/V2版本图标
&lt;img src=&quot;/content/images/post/20190409/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;更多&quot;&gt;更多&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;手动测试找到适合自己的server
&lt;img src=&quot;/content/images/post/20190409/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;测速地址（可以连接和断开vpn的情况下分别测速对比）
&lt;a href=&quot;http://str-sfo311.reliablehosting.com/&quot;&gt;http://str-sfo311.reliablehosting.com/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;参考
https://blog.strongvpn.net/checking-vpn-server-network-speed-with-the-strongvpn-dialer-software/&lt;/p&gt;</content><author><name>LIU YUE</name></author><summary type="html">遵纪守法是每个公民的责任,本文目的纯粹是给做外贸业务或者相关业务的朋友介绍一款可以使用外部网络的软件,当然是收费的,不推荐免费的,因为这种免费的软件一般都不稳定,所以只推荐我一直在用的老牌产品strongvpn服务,支持支付宝付款.</summary></entry><entry><title type="html">Setup dev env - virtualbox</title><link href="http://localhost:4000/env-virtualbox/" rel="alternate" type="text/html" title="Setup dev env - virtualbox" /><published>2019-04-03T00:00:00+08:00</published><updated>2019-04-03T00:00:00+08:00</updated><id>http://localhost:4000/env-virtualbox</id><content type="html" xml:base="http://localhost:4000/env-virtualbox/">&lt;p&gt;It’s important for developers to setup local env to simulate production env, not only that we have a overview(god’s eye view) of the whole project but also we can have a ‘mini lab’ to try out and get the result quickly.&lt;/p&gt;

&lt;p&gt;And for blockchain developers it’s even more crucial to setup multiple virtual instances to interact with each other, someone may debate that, most of the time you can simply run a single node: for bitcoin core you have regtest mode, for ETH you have ganache and truffle dev, for EOS you have docker composer, yet for a comprehensive project, there are much more bulding blocks beside the running nodes, normally you’ll have a large portion of off-chain components like database, web api etc, and for consortium blockchain like hyperledger, you have to run multi nodes: peer nodes, orderer nodes.&lt;/p&gt;

&lt;p&gt;It’s always good for us to level up a little bit our knowledge on virtualbox.&lt;/p&gt;

&lt;p&gt;For demonstration my hosting machine is windows, virtualbox version 6.0, 
one common requirement is that we need database and backend service running on internal network or intranet,  blockchain nodes and websites talking to both intranet and external internet.
based on the abilities comparision of different virtualbox network mode:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Mode&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;VM-&amp;gt;Host&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;VM&amp;lt;-Host&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;VM1&amp;lt;-&amp;gt;VM2&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;VM-&amp;gt;Net/LAN&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;VM&amp;lt;-Net/LAN&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Host-only&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;+&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;+&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;+&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Internal&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;+&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bridged&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;+&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;+&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;+&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;+&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;+&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NAT&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;+&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PortForward&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;+&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PortForward&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NATservice&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;+&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PortForward&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;+&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;+&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PortForward&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;p&gt;Host-only networking is particularly useful for preconfigured virtual appliances, where multiple virtual machines are shipped together and designed to cooperate. For example, one virtual machine may contain a web server and a second one a database, and since they are intended to talk to each other, the appliance can instruct Oracle VM VirtualBox to set up a host-only network for the two. A second, bridged, network would then connect the web server to the outside world to serve data to, but the outside world cannot connect to the database.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To achieve the requirement, we choose the following configuration for our virtualbox instance setup:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;vb1 to host database and backend service: host-only mode&lt;/li&gt;
  &lt;li&gt;vb2 to host blockchain nodes and websites: bridged mode and host-only mode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;, so the expected result would be:&lt;/p&gt;

&lt;p&gt;host machine can talk to both vb1 and vb2 through ssh(default port 22, highly recommend winscp for windows users),
vb1 can only talk to vb2 and host machine
vb2 can talk to everything&lt;/p&gt;

&lt;p&gt;1.Setup
host network manager for host-only network config
&lt;img src=&quot;/content/images/post/20190403/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;blockquote&gt;
      &lt;p&gt;vb1&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/post/20190403/6.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/content/images/post/20190403/7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;blockquote&gt;
      &lt;p&gt;vb2&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/post/20190403/2.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/content/images/post/20190403/3.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/content/images/post/20190403/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;somehow dhcp not working sometimes for the bridged adapter, if you find that dhcp doesn’t allocate ip for your bridged interface, you can manually fix it:
&lt;code class=&quot;highlighter-rouge&quot;&gt;dhclient eth0&lt;/code&gt;
or you can edit network interface config to make it static&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim /etc/network/interfaces
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet static
	address yourip
	netmask 255.255.255.0
	gateway your gateway
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/post/20190403/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2.Commands&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ifconfig
ip route show
route -n
cat /etc/network/interfaces
/etc/init.d/networking restart
service network-manager restart 
ifdown eth0
ifup eth0
dhclient eth0
Ifconfig eth0 [ip] netmask 255.255.255.0 up
route add default gw [gateway] eth0
ip route add default via [gateway] dev eth0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3.Further learning&lt;/p&gt;

&lt;p&gt;1) you can even config vb2 as a router by changing gateway of vb1, so you can do some data traffic monitoring easily&lt;/p&gt;

&lt;p&gt;2) sometimes you may find your disk space used up, very common when you pull lots of dockers images or your blockchain nodes sync gigbytes of chain data, if you don’t want to start over the setup again, good news is that you can always resize your vdi:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;resize before install os:
&lt;code class=&quot;highlighter-rouge&quot;&gt;VBoxVBoxManage.exe modifyhd your.vdi --resize [targetsize]&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;resize after install os:
use gparted, detail refer to http://derekmolloy.ie/resize-a-virtualbox-disk/&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;refer:
https://www.virtualbox.org/manual/ch06.html&lt;/p&gt;</content><author><name>LIU YUE</name></author><summary type="html">It’s important for developers to setup local env to simulate production env, not only that we have a overview(god’s eye view) of the whole project but also we can have a ‘mini lab’ to try out and get the result quickly.</summary></entry></feed>